{"version":3,"file":"\\packages\\peerdb.js","sources":["peerdb\\lib.coffee","peerdb\\server.coffee"],"names":[],"mappings":"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","sourcesContent":["globals = @\r\n\r\nRESERVED_FIELDS = ['document', 'parent', 'schema', 'migrations']\r\nINVALID_TARGET = \"Invalid target document\"\r\nMAX_RETRIES = 1000\r\n\r\nclass codeMinimizedTest\r\n\r\n@CODE_MINIMIZED = codeMinimizedTest.name and codeMinimizedTest.name isnt 'codeMinimizedTest'\r\n\r\nisPlainObject = (obj) ->\r\n  if not _.isObject(obj) or _.isArray(obj) or _.isFunction(obj)\r\n    return false\r\n\r\n  if obj.constructor isnt Object\r\n    return false\r\n\r\n  return true\r\n\r\ndeepExtend = (obj, args...) ->\r\n  _.each args, (source) ->\r\n    _.each source, (value, key) ->\r\n      if obj[key] and value and isPlainObject(obj[key]) and isPlainObject(value)\r\n        obj[key] = deepExtend obj[key], value\r\n      else\r\n        obj[key] = value\r\n  obj\r\n\r\nremoveUndefined = (obj) ->\r\n  assert isPlainObject obj\r\n\r\n  res = {}\r\n  for key, value of obj\r\n    if _.isUndefined value\r\n      continue\r\n    else if isPlainObject value\r\n      res[key] = removeUndefined value\r\n    else\r\n      res[key] = value\r\n  res\r\n\r\nstartsWith = (string, start) ->\r\n  string.lastIndexOf(start, 0) is 0\r\n\r\nremovePrefix = (string, prefix) ->\r\n  string.substring prefix.length\r\n\r\ngetCollection = (name, document, replaceParent) ->\r\n  transform = (doc) => new document doc\r\n\r\n  if _.isString(name)\r\n    if Document._collections[name]\r\n      methodHandlers = Document._collections[name]._connection.method_handlers or Document._collections[name]._connection._methodHandlers\r\n      for method of methodHandlers\r\n        if startsWith method, Document._collections[name]._prefix\r\n          if replaceParent\r\n            delete methodHandlers[method]\r\n          else\r\n            throw new Error \"Reuse of a collection without replaceParent set\"\r\n      if Document._collections[name]._connection.registerStore\r\n        if replaceParent\r\n          delete Document._collections[name]._connection._stores[name]\r\n        else\r\n          throw new Error \"Reuse of a collection without replaceParent set\"\r\n    collection = new Meteor.Collection name, transform: transform\r\n    Document._collections[name] = collection\r\n  else if name is null\r\n    collection = new Meteor.Collection name, transform: transform\r\n  else\r\n    collection = name\r\n    if collection._peerdb and not replaceParent\r\n      throw new Error \"Reuse of a collection without replaceParent set\"\r\n    collection._transform = LocalCollection.wrapTransform transform\r\n    collection._peerdb = true\r\n\r\n  collection\r\n\r\nclass globals.Document\r\n  # TODO: When we will require all fields to be specified and have validator support to validate new objects, we can also run validation here and check all data, reference fields and others\r\n  @objectify: (parent, ancestorArray, obj, fields) ->\r\n    throw new Error \"Document does not match schema, not a plain object\" unless isPlainObject obj\r\n\r\n    for name, field of fields\r\n      # Not all fields are necessary provided\r\n      continue unless obj[name]\r\n\r\n      path = if parent then \"#{ parent }.#{ name }\" else name\r\n\r\n      if field instanceof globals.Document._ReferenceField\r\n        throw new Error \"Document does not match schema, sourcePath does not match: #{ field.sourcePath } vs. #{ path }\" if field.sourcePath isnt path\r\n\r\n        if field.isArray\r\n          throw new Error \"Document does not match schema, not an array\" unless _.isArray obj[name]\r\n          obj[name] = _.map obj[name], (o) => new field.targetDocument o\r\n        else\r\n          throw new Error \"Document does not match schema, ancestorArray does not match: #{ field.ancestorArray } vs. #{ ancestorArray }\" if field.ancestorArray isnt ancestorArray\r\n          throw new Error \"Document does not match schema, not a plain object\" unless isPlainObject obj[name]\r\n          obj[name] = new field.targetDocument obj[name]\r\n\r\n      else if isPlainObject field\r\n        if _.isArray obj[name]\r\n          throw new Error \"Document does not match schema, an unexpected array\" unless _.some field, (f) => f.ancestorArray is path\r\n          throw new Error \"Document does not match schema, nested arrays are not supported\" if ancestorArray\r\n          obj[name] = _.map obj[name], (o) => @objectify path, path, o, field\r\n        else\r\n          throw new Error \"Document does not match schema, expected an array\" if _.some field, (f) => f.ancestorArray is path\r\n          obj[name] = @objectify path, ancestorArray, obj[name], field\r\n\r\n    obj\r\n\r\n  constructor: (doc) ->\r\n    _.extend @, @constructor.objectify '', null, (doc or {}), (@constructor?.Meta?.fields or {})\r\n\r\n  @_Trigger: class\r\n    constructor: (@fields, @trigger) ->\r\n      @fields ?= []\r\n\r\n    contributeToClass: (@document, @name) =>\r\n      @_metaLocation = @document.Meta._location\r\n      @collection = @document.Meta.collection\r\n\r\n    validate: =>\r\n      # TODO: Should these be simply asserts?\r\n      throw new Error \"Missing meta location\" unless @_metaLocation\r\n      throw new Error \"Missing name (from #{ @_metaLocation })\" unless @name\r\n      throw new Error \"Missing document (for #{ @name} trigger from #{ @_metaLocation })\" unless @document\r\n      throw new Error \"Missing collection (for #{ @name} trigger from #{ @_metaLocation })\" unless @collection\r\n      throw new Error \"Document not defined (for #{ @name} trigger from #{ @_metaLocation })\" unless @document.Meta._listIndex?\r\n\r\n      assert not @document.Meta._replaced\r\n      assert not @document.Meta._delayIndex?\r\n      assert.equal @document.Meta.document, @document\r\n      assert.equal @document.Meta.document.Meta, @document.Meta\r\n\r\n  @Trigger: (args...) ->\r\n    new @_Trigger args...\r\n\r\n  @_Field: class\r\n    contributeToClass: (@sourceDocument, @sourcePath, @ancestorArray) =>\r\n      @_metaLocation = @sourceDocument.Meta._location\r\n      @sourceCollection = @sourceDocument.Meta.collection\r\n\r\n    validate: =>\r\n      # TODO: Should these be simply asserts?\r\n      throw new Error \"Missing meta location\" unless @_metaLocation\r\n      throw new Error \"Missing source path (from #{ @_metaLocation })\" unless @sourcePath\r\n      throw new Error \"Missing source document (for #{ @sourcePath } from #{ @_metaLocation })\" unless @sourceDocument\r\n      throw new Error \"Missing source collection (for #{ @sourcePath } from #{ @_metaLocation })\" unless @sourceCollection\r\n      throw new Error \"Source document not defined (for #{ @sourcePath } from #{ @_metaLocation })\" unless @sourceDocument.Meta._listIndex?\r\n\r\n      assert not @sourceDocument.Meta._replaced\r\n      assert not @sourceDocument.Meta._delayIndex?\r\n      assert.equal @sourceDocument.Meta.document, @sourceDocument\r\n      assert.equal @sourceDocument.Meta.document.Meta, @sourceDocument.Meta\r\n\r\n  @_ObservingField: class extends @_Field\r\n\r\n  @_TargetedFieldsObservingField: class extends @_ObservingField\r\n    constructor: (targetDocument, @fields) ->\r\n      super()\r\n\r\n      @fields ?= []\r\n\r\n      if targetDocument is 'self'\r\n        @targetDocument = 'self'\r\n        @targetCollection = null\r\n      else if _.isFunction(targetDocument) and targetDocument.prototype instanceof globals.Document\r\n        @targetDocument = targetDocument\r\n        @targetCollection = targetDocument.Meta.collection\r\n      else\r\n        throw new Error INVALID_TARGET\r\n\r\n    contributeToClass: (sourceDocument, sourcePath, ancestorArray) =>\r\n      super sourceDocument, sourcePath, ancestorArray\r\n\r\n      if @targetDocument is 'self'\r\n        @targetDocument = @sourceDocument\r\n        @targetCollection = @sourceCollection\r\n\r\n      # Helpful values to know where and what the field is\r\n      @inArray = @ancestorArray and startsWith @sourcePath, @ancestorArray\r\n      @isArray = @ancestorArray and @sourcePath is @ancestorArray\r\n      @arraySuffix = removePrefix @sourcePath, @ancestorArray if @inArray\r\n\r\n    validate: =>\r\n      super()\r\n\r\n      throw new Error \"Missing target document (for #{ @sourcePath } from #{ @_metaLocation })\" unless @targetDocument\r\n      throw new Error \"Missing target collection (for #{ @sourcePath } from #{ @_metaLocation })\" unless @targetCollection\r\n      throw new Error \"Target document not defined (for #{ @sourcePath } from #{ @_metaLocation })\" unless @targetDocument.Meta._listIndex?\r\n\r\n      assert not @targetDocument.Meta._replaced\r\n      assert not @targetDocument.Meta._delayIndex?\r\n      assert.equal @targetDocument.Meta.document, @targetDocument\r\n      assert.equal @targetDocument.Meta.document.Meta, @targetDocument.Meta\r\n\r\n  @_ReferenceField: class extends @_TargetedFieldsObservingField\r\n    constructor: (targetDocument, fields, @required, @reverseName, @reverseFields) ->\r\n      super targetDocument, fields\r\n\r\n      @required ?= true\r\n      @reverseName ?= null\r\n      @reverseFields ?= []\r\n\r\n    contributeToClass: (sourceDocument, sourcePath, ancestorArray) =>\r\n      super sourceDocument, sourcePath, ancestorArray\r\n\r\n      throw new Error \"Reference field directly in an array cannot be optional (for #{ @sourcePath } from #{ @_metaLocation })\" if @ancestorArray and @sourcePath is @ancestorArray and not @required\r\n\r\n      return unless @reverseName\r\n\r\n      # We return now because contributeToClass will be retried sooner or later with replaced document again\r\n      return if @targetDocument.Meta._replaced\r\n\r\n      for reverse in @targetDocument.Meta._reverseFields\r\n        return if _.isEqual(reverse.reverseName, @reverseName) and _.isEqual(reverse.reverseFields, @reverseFields) and reverse.sourceDocument is @sourceDocument\r\n\r\n      @targetDocument.Meta._reverseFields.push @\r\n\r\n      # If target document is already defined, we queue it for a retry.\r\n      # We do not queue children, because or children replace a parent\r\n      # (and reverse fields will be defined there), or reference is\r\n      # pointing to this target document and we want reverse defined\r\n      # only once and only on exact target document and not its\r\n      # children.\r\n      if @targetDocument.Meta._listIndex?\r\n        globals.Document.list.splice @targetDocument.Meta._listIndex, 1\r\n\r\n        delete @targetDocument.Meta._replaced\r\n        delete @targetDocument.Meta._listIndex\r\n\r\n        # Renumber documents\r\n        for doc, i in globals.Document.list\r\n          doc.Meta._listIndex = i\r\n\r\n        globals.Document._addDelayed @targetDocument\r\n\r\n  @ReferenceField: (args...) ->\r\n    new @_ReferenceField args...\r\n\r\n  @_GeneratedField: class extends @_TargetedFieldsObservingField\r\n    constructor: (targetDocument, fields, @generator) ->\r\n      super targetDocument, fields\r\n\r\n  @GeneratedField: (args...) ->\r\n    new @_GeneratedField args...\r\n\r\n  @_Manager: class\r\n    constructor: (@meta) ->\r\n\r\n    find: (args...) =>\r\n      @meta.collection.find args...\r\n\r\n    findOne: (args...) =>\r\n      @meta.collection.findOne args...\r\n\r\n    insert: (args...) =>\r\n      @meta.collection.insert args...\r\n\r\n    update: (args...) =>\r\n      @meta.collection.update args...\r\n\r\n    upsert: (args...) =>\r\n      @meta.collection.upsert args...\r\n\r\n    remove: (args...) =>\r\n      @meta.collection.remove args...\r\n\r\n    exists: (query) =>\r\n      !!@meta.collection.findOne query,\r\n        fields:\r\n          _id: 1\r\n        transform: null\r\n\r\n  @_setDelayedCheck: ->\r\n    return unless globals.Document._delayed.length\r\n\r\n    @_clearDelayedCheck()\r\n\r\n    globals.Document._delayedCheckTimeout = Meteor.setTimeout ->\r\n      if globals.Document._delayed.length\r\n        delayed = [] # Display friendly list of delayed documents\r\n        for document in globals.Document._delayed\r\n          delayed.push \"#{ document.Meta._name } from #{ document.Meta._location }\"\r\n        Log.error \"Not all delayed document definitions were successfully retried:\\n#{ delayed.join('\\n') }\"\r\n    , 1000 # ms\r\n\r\n  @_clearDelayedCheck: ->\r\n    Meteor.clearTimeout globals.Document._delayedCheckTimeout if globals.Document._delayedCheckTimeout\r\n\r\n  @_processTriggers: (triggers) ->\r\n    assert triggers\r\n    assert isPlainObject triggers\r\n\r\n    for name, trigger of triggers\r\n      throw new Error \"Trigger names cannot contain '.' (for #{ name } trigger from #{ @Meta._location })\" if name.indexOf('.') isnt -1\r\n\r\n      if trigger instanceof globals.Document._Trigger\r\n        trigger.contributeToClass @, name\r\n      else\r\n        throw new Error \"Invalid value for trigger (for #{ name } trigger from #{ @Meta._location })\"\r\n\r\n    triggers\r\n\r\n  @_processFields: (fields, parent, ancestorArray) ->\r\n    assert fields\r\n    assert isPlainObject fields\r\n\r\n    ancestorArray = ancestorArray or null\r\n\r\n    res = {}\r\n    for name, field of fields\r\n      throw new Error \"Field names cannot contain '.' (for #{ name } from #{ @Meta._location })\" if name.indexOf('.') isnt -1\r\n\r\n      path = if parent then \"#{ parent }.#{ name }\" else name\r\n      array = ancestorArray\r\n\r\n      if _.isArray field\r\n        throw new Error \"Array field has to contain exactly one element, not #{ field.length } (for #{ path } from #{ @Meta._location })\" if field.length isnt 1\r\n        field = field[0]\r\n\r\n        if array\r\n          # TODO: Support nested arrays\r\n          # See: https://jira.mongodb.org/browse/SERVER-831\r\n          throw new Error \"Field cannot be in a nested array (for #{ path } from #{ @Meta._location })\"\r\n\r\n        array = path\r\n\r\n      if field instanceof globals.Document._Field\r\n        field.contributeToClass @, path, array\r\n        res[name] = field\r\n      else if _.isObject field\r\n        res[name] = @_processFields field, path, array\r\n      else\r\n        throw new Error \"Invalid value for field (for #{ path } from #{ @Meta._location })\"\r\n\r\n    res\r\n\r\n  @_fieldsUseDocument: (fields, document) ->\r\n    assert fields\r\n    assert isPlainObject fields\r\n\r\n    for name, field of fields\r\n      if field instanceof globals.Document._TargetedFieldsObservingField\r\n        return true if field.sourceDocument is document\r\n        return true if field.targetDocument is document\r\n      else if field instanceof globals.Document._Field\r\n        return true if field.sourceDocument is document\r\n      else\r\n        assert isPlainObject field\r\n        return true if @_fieldsUseDocument field, document\r\n\r\n    false\r\n\r\n  @_retryAllUsing: (document) ->\r\n    documents = globals.Document.list\r\n    globals.Document.list = []\r\n\r\n    for doc in documents\r\n      if @_fieldsUseDocument doc.Meta.fields, document\r\n        delete doc.Meta._replaced\r\n        delete doc.Meta._listIndex\r\n        @_addDelayed doc\r\n      else\r\n        globals.Document.list.push doc\r\n        doc.Meta._listIndex = globals.Document.list.length - 1\r\n\r\n  @_retryDelayed: (throwErrors) ->\r\n    @_clearDelayedCheck()\r\n\r\n    # We store the delayed list away, so that we can iterate over it\r\n    delayed = globals.Document._delayed\r\n    # And set it back to the empty list, we will add to it again as necessary\r\n    globals.Document._delayed = []\r\n\r\n    for document in delayed\r\n      delete document.Meta._delayIndex\r\n\r\n    processedCount = 0\r\n\r\n    for document in delayed\r\n      assert not document.Meta._listIndex?\r\n\r\n      if document.Meta._replaced\r\n        continue\r\n\r\n      try\r\n        triggers = document.Meta._triggers.call document, {}\r\n        if triggers and isPlainObject triggers\r\n          document.Meta.triggers = document._processTriggers triggers\r\n      catch e\r\n        if not throwErrors and (e.message is INVALID_TARGET or e instanceof ReferenceError)\r\n          @_addDelayed document\r\n          continue\r\n        else\r\n          throw new Error \"Invalid triggers (from #{ document.Meta._location }): #{ e.stringOf?() or e }\\n---#{ if e.stack then \"#{ e.stack }\\n---\" else '' }\"\r\n\r\n      throw new Error \"No triggers returned (from #{ document.Meta._location })\" unless triggers\r\n      throw new Error \"Returned triggers should be a plain object (from #{ document.Meta._location })\" unless isPlainObject triggers\r\n\r\n      try\r\n        fields = document.Meta._fields.call document, {}\r\n        if fields and isPlainObject fields\r\n          # We run _processFields first, so that _reverseFields for this document is populated as well\r\n          document._processFields fields\r\n\r\n          reverseFields = {}\r\n          for reverse in document.Meta._reverseFields\r\n            reverseFields[reverse.reverseName] = [globals.Document.ReferenceField reverse.sourceDocument, reverse.reverseFields]\r\n\r\n          # And now we run _reverseFields for real on all fields\r\n          document.Meta.fields = document._processFields _.extend fields, reverseFields\r\n      catch e\r\n        if not throwErrors and (e.message is INVALID_TARGET or e instanceof ReferenceError)\r\n          @_addDelayed document\r\n          continue\r\n        else\r\n          throw new Error \"Invalid fields (from #{ document.Meta._location }): #{ e.stringOf?() or e }\\n---#{ if e.stack then \"#{ e.stack }\\n---\" else '' }\"\r\n\r\n      throw new Error \"No fields returned (from #{ document.Meta._location })\" unless fields\r\n      throw new Error \"Returned fields should be a plain object (from #{ document.Meta._location })\" unless isPlainObject fields\r\n\r\n      if document.Meta.replaceParent and not document.Meta.parent?._replaced\r\n        throw new Error \"Replace parent set, but no parent known (from #{ document.Meta._location })\" unless document.Meta.parent\r\n\r\n        document.Meta.parent._replaced = true\r\n\r\n        if document.Meta.parent._listIndex?\r\n          globals.Document.list.splice document.Meta.parent._listIndex, 1\r\n          delete document.Meta.parent._listIndex\r\n\r\n          # Renumber documents\r\n          for doc, i in globals.Document.list\r\n            doc.Meta._listIndex = i\r\n\r\n        else if document.Meta.parent._delayIndex?\r\n          globals.Document._delayed.splice document.Meta.parent._delayIndex, 1\r\n          delete document.Meta.parent._delayIndex\r\n\r\n          # Renumber documents\r\n          for doc, i in globals.Document._delayed\r\n            doc.Meta._delayIndex = i\r\n\r\n        @_retryAllUsing document.Meta.parent.document\r\n\r\n      globals.Document.list.push document\r\n      document.Meta._listIndex = globals.Document.list.length - 1\r\n      delete document.Meta._delayIndex\r\n\r\n      assert not document.Meta._replaced\r\n\r\n      processedCount++\r\n\r\n    @_setDelayedCheck()\r\n\r\n    processedCount\r\n\r\n  @_addDelayed: (document) ->\r\n    @_clearDelayedCheck()\r\n\r\n    assert not document.Meta._replaced\r\n    assert not document.Meta._listIndex?\r\n\r\n    globals.Document._delayed.push document\r\n    document.Meta._delayIndex = globals.Document._delayed.length - 1\r\n\r\n    @_setDelayedCheck()\r\n\r\n  @_validateTriggers: (document) ->\r\n    for name, trigger of document.Meta.triggers\r\n      if trigger instanceof globals.Document._Trigger\r\n        trigger.validate()\r\n      else\r\n        throw new Error \"Invalid trigger (for #{ name } trigger from #{ document.Meta._location })\"\r\n\r\n  @_validateFields: (obj) ->\r\n    for name, field of obj\r\n      if field instanceof globals.Document._Field\r\n        field.validate()\r\n      else\r\n        @_validateFields field\r\n\r\n  @Meta: (meta) ->\r\n    for field in RESERVED_FIELDS or startsWith field, '_'\r\n      throw \"Reserved meta field name: #{ field }\" if field of meta\r\n\r\n    if meta.abstract\r\n      throw new Error \"name cannot be set in abstract document\" if meta.name\r\n      throw new Error \"replaceParent cannot be set in abstract document\" if meta.replaceParent\r\n      throw new Error \"Abstract document with a parent\" if @Meta._name\r\n    else\r\n      throw new Error \"Missing document name\" unless meta.name\r\n      throw new Error \"Document name does not match class name\" if not CODE_MINIMIZED and @name and @name isnt meta.name\r\n      throw new Error \"replaceParent set without a parent\" if meta.replaceParent and not @Meta._name\r\n\r\n    name = meta.name\r\n    currentTriggers = meta.triggers or (ts) -> ts\r\n    currentFields = meta.fields or (fs) -> fs\r\n    meta = _.omit meta, 'name', 'triggers', 'fields'\r\n\r\n    parentMeta = @Meta\r\n\r\n    if parentMeta._triggers\r\n      triggers = (ts) ->\r\n        newTs = parentMeta._triggers ts\r\n        removeUndefined _.extend ts, newTs, currentTriggers newTs\r\n    else\r\n      triggers = currentTriggers\r\n\r\n    meta._triggers = triggers # Triggers function\r\n\r\n    if parentMeta._fields\r\n      fields = (fs) ->\r\n        newFs = parentMeta._fields fs\r\n        removeUndefined deepExtend fs, newFs, currentFields newFs\r\n    else\r\n      fields = currentFields\r\n\r\n    meta._fields = fields # Fields function\r\n\r\n    if not meta.abstract\r\n      meta._name = name # \"name\" is a reserved property name on functions in some environments (eg. node.js), so we use \"_name\"\r\n      # For easier debugging and better error messages\r\n      meta._location = if CODE_MINIMIZED then '<code_minimized>' else StackTrace.getCaller()\r\n      meta.document = @\r\n\r\n      if meta.collection is null or meta.collection\r\n        meta.collection = getCollection meta.collection, @, meta.replaceParent\r\n      else if parentMeta.collection?._peerdb\r\n        meta.collection = getCollection parentMeta.collection, @, meta.replaceParent\r\n      else\r\n        meta.collection = getCollection \"#{ name }s\", @, meta.replaceParent\r\n\r\n      if @Meta._name\r\n        meta.parent = parentMeta\r\n\r\n      if not meta.replaceParent\r\n        # If we are not replacing the parent, we override _reverseFields with an empty set\r\n        # because we want reverse fields only on exact target document and not its children.\r\n        meta._reverseFields = []\r\n      else\r\n        meta._reverseFields = _.clone parentMeta._reverseFields\r\n\r\n      if not meta.replaceParent\r\n        # If we are not replacing the parent, we create a new list of migrations\r\n        meta.migrations = []\r\n\r\n    clonedParentMeta = -> parentMeta.apply @, arguments\r\n    filteredParentMeta = _.omit parentMeta, '_listIndex', '_delayIndex', '_replaced', 'parent', 'replaceParent', 'abstract'\r\n    @Meta = _.extend clonedParentMeta, filteredParentMeta, meta\r\n\r\n    if not meta.abstract\r\n      assert @Meta._reverseFields\r\n\r\n      @documents = new @_Manager @Meta\r\n\r\n      @_addDelayed @\r\n      @_retryDelayed()\r\n\r\n  @list = []\r\n  @_delayed = []\r\n  @_delayedCheckTimeout = null\r\n  @_collections = {}\r\n\r\n  @validateAll: ->\r\n    for document in globals.Document.list\r\n      throw new Error \"Missing fields (from #{ document.Meta._location })\" unless document.Meta.fields\r\n      @_validateTriggers document\r\n      @_validateFields document.Meta.fields\r\n\r\n  @defineAll: (dontThrowDelayedErrors) ->\r\n    for i in [0..MAX_RETRIES]\r\n      if i is MAX_RETRIES\r\n        throw new Error \"Possible infinite loop\" unless dontThrowDelayedErrors\r\n        break\r\n\r\n      globals.Document._retryDelayed not dontThrowDelayedErrors\r\n\r\n      break unless globals.Document._delayed.length\r\n\r\n    globals.Document.validateAll()\r\n\r\n    assert dontThrowDelayedErrors or globals.Document._delayed.length is 0\r\n\r\nDocument = globals.Document\r\n\r\nassert globals.Document._ReferenceField.prototype instanceof globals.Document._TargetedFieldsObservingField\r\nassert globals.Document._GeneratedField.prototype instanceof globals.Document._TargetedFieldsObservingField\r\n","semver = Npm.require 'semver'\r\nFuture = Npm.require 'fibers/future'\r\n\r\nglobals = @\r\n\r\n# From Meteor's random/random.js\r\nUNMISTAKABLE_CHARS = '23456789ABCDEFGHJKLMNPQRSTWXYZabcdefghijkmnopqrstuvwxyz'\r\n\r\nINSTANCES = parseInt(process.env.PEERDB_INSTANCES ? 1)\r\nINSTANCE = parseInt(process.env.PEERDB_INSTANCE ? 0)\r\n\r\nthrow new Error \"Invalid number of instances: #{ INSTANCES }\" unless 0 <= INSTANCES <= UNMISTAKABLE_CHARS.length\r\nthrow new Error \"Invalid instance index: #{ INSTANCE }\" unless (INSTANCES is 0 and INSTANCE is 0) or 0 <= INSTANCE < INSTANCES\r\n\r\n# TODO: Support also other types of _id generation (like ObjectID)\r\n# TODO: We could do also a hash of an ID and then split, this would also prevent any DOS attacks by forcing IDs of a particular form\r\nPREFIX = UNMISTAKABLE_CHARS.split ''\r\n\r\nif INSTANCES > 1\r\n  range = UNMISTAKABLE_CHARS.length / INSTANCES\r\n  PREFIX = PREFIX[Math.round(INSTANCE * range)...Math.round((INSTANCE + 1) * range)]\r\n\r\n# Fields:\r\n#   serial\r\n#   migrationName\r\n#   oldCollectionName\r\n#   newCollectionName\r\n#   oldVersion\r\n#   newVersion\r\n#   timestamp\r\n#   migrated\r\n#   all\r\n# We use a lower case collection name to signal it is a system collection\r\nglobals.Document.Migrations = new Meteor.Collection 'migrations'\r\n\r\nfieldsToProjection = (fields) ->\r\n  projection =\r\n    _id: 1 # In the case we want only id, that is, detect deletions\r\n  for field in fields\r\n    if _.isString field\r\n      projection[field] = 1\r\n    else\r\n      _.extend projection, field\r\n  projection\r\n\r\n# TODO: Should we add retry?\r\nobserverCallback = (f) ->\r\n  return (obj, args...) ->\r\n    try\r\n      id = if _.isObject obj then obj._id else obj\r\n      # We call f only if the first character of id is in PREFIX.\r\n      # By that we allow each instance to operate only on a subset\r\n      # of documents, allowing simple coordination while scaling.\r\n      f obj, args... if id[0] in PREFIX\r\n    catch e\r\n      Log.error \"PeerDB exception: #{ e }: #{ util.inspect args, depth: 10 }\"\r\n      Log.error e.stack\r\n\r\nextractValue = (obj, path) ->\r\n  while path.length\r\n    obj = obj[path[0]]\r\n    path = path[1..]\r\n  obj\r\n\r\n# Cannot use => here because we are not in the globals.Document._TargetedFieldsObservingField context.\r\n# We have to modify prototype directly because there are classes which already inherit from the class\r\n# and we cannot just override the class as we are doing for other server-side only methods.\r\nglobals.Document._TargetedFieldsObservingField::_setupTargetObservers = (updateAll) ->\r\n  if not updateAll and @ instanceof globals.Document._ReferenceField\r\n    index = {}\r\n    index[\"#{ @sourcePath }._id\"] = 1\r\n    @sourceCollection._ensureIndex index\r\n\r\n    if @reverseName\r\n      index = {}\r\n      index[\"#{ @reverseName }._id\"] = 1\r\n      @targetCollection._ensureIndex index\r\n\r\n  initializing = true\r\n\r\n  observers =\r\n    added: observerCallback (id, fields) =>\r\n      @updateSource id, fields if updateAll or not initializing\r\n\r\n  unless updateAll\r\n    observers.changed = observerCallback (id, fields) =>\r\n      @updateSource id, fields\r\n\r\n    observers.removed = observerCallback (id) =>\r\n      @removeSource id\r\n\r\n  referenceFields = fieldsToProjection @fields\r\n  handle = @targetCollection.find({}, fields: referenceFields).observeChanges observers\r\n\r\n  initializing = false\r\n\r\n  handle.stop() if updateAll\r\n\r\n# Cannot use => here because we are not in the globals.Document._Trigger context.\r\n# We are modifying prototype directly to match code style of\r\n# _TargetedFieldsObservingField::_setupTargetObservers but in this case it is not\r\n# really needed, because there are no already existing classes which would inherit\r\n# from globals.Document._Trigger.\r\nglobals.Document._Trigger::_setupObservers = ->\r\n  initializing = true\r\n\r\n  queryFields = fieldsToProjection @fields\r\n  @collection.find({}, fields: queryFields).observe\r\n    added: observerCallback (document) =>\r\n      @trigger document, {} unless initializing\r\n\r\n    changed: observerCallback (newDocument, oldDocument) =>\r\n      @trigger newDocument, oldDocument\r\n\r\n    removed: observerCallback (oldDocument) =>\r\n      @trigger {}, oldDocument\r\n\r\n  initializing = false\r\n\r\nclass globals.Document._Trigger extends globals.Document._Trigger\r\n  trigger: (newDocument, oldDocument) =>\r\n    @generator newDocument, oldDocument\r\n\r\nclass globals.Document._ReferenceField extends globals.Document._ReferenceField\r\n  updateSource: (id, fields) =>\r\n    # Just to be sure\r\n    return if _.isEmpty fields\r\n\r\n    selector = {}\r\n    selector[\"#{ @sourcePath }._id\"] = id\r\n\r\n    update = {}\r\n    if @inArray\r\n      for field, value of fields\r\n        path = \"#{ @ancestorArray }.$#{ @arraySuffix }.#{ field }\"\r\n\r\n        if _.isUndefined value\r\n          update.$unset ?= {}\r\n          update.$unset[path] = ''\r\n        else\r\n          update.$set ?= {}\r\n          update.$set[path] = value\r\n\r\n        # We cannot use top-level $or with $elemMatch\r\n        # See: https://jira.mongodb.org/browse/SERVER-11537\r\n        selector[@ancestorArray] ?= {}\r\n        selector[@ancestorArray].$elemMatch ?=\r\n          $or: []\r\n\r\n        s = {}\r\n        # We have to repeat id selector here as well\r\n        # See: https://jira.mongodb.org/browse/SERVER-11536\r\n        s[\"#{ @arraySuffix }._id\".substring(1)] = id\r\n        # Remove initial dot with substring(1)\r\n        if _.isUndefined value\r\n          s[\"#{ @arraySuffix }.#{ field }\".substring(1)] =\r\n            $exists: true\r\n        else\r\n          s[\"#{ @arraySuffix }.#{ field }\".substring(1)] =\r\n            $ne: value\r\n\r\n        selector[@ancestorArray].$elemMatch.$or.push s\r\n\r\n      # $ operator updates only the first matching element in the array,\r\n      # so we have to loop until nothing changes\r\n      # See: https://jira.mongodb.org/browse/SERVER-1243\r\n      loop\r\n        break unless @sourceCollection.update selector, update, multi: true\r\n\r\n    else\r\n      for field, value of fields\r\n        path = \"#{ @sourcePath }.#{ field }\"\r\n\r\n        s = {}\r\n        if _.isUndefined value\r\n          update.$unset ?= {}\r\n          update.$unset[path] = ''\r\n\r\n          s[path] =\r\n            $exists: true\r\n        else\r\n          update.$set ?= {}\r\n          update.$set[path] = value\r\n\r\n          s[path] =\r\n            $ne: value\r\n\r\n        selector.$or ?= []\r\n        selector.$or.push s\r\n\r\n      @sourceCollection.update selector, update, multi: true\r\n\r\n  removeSource: (id) =>\r\n    selector = {}\r\n    selector[\"#{ @sourcePath }._id\"] = id\r\n\r\n    # If it is an array or a required field of a subdocument is in an array, we remove references from an array\r\n    if @isArray or (@required and @inArray)\r\n      update =\r\n        $pull: {}\r\n      update.$pull[@ancestorArray] = {}\r\n      # @arraySuffix starts with a dot, so with .substring(1) we always remove a dot\r\n      update.$pull[@ancestorArray][\"#{ @arraySuffix or '' }._id\".substring(1)] = id\r\n\r\n      @sourceCollection.update selector, update, multi: true\r\n\r\n    # If it is an optional field of a subdocument in an array, we set it to null\r\n    else if not @required and @inArray\r\n      path = \"#{ @ancestorArray }.$#{ @arraySuffix }\"\r\n      update =\r\n        $set: {}\r\n      update.$set[path] = null\r\n\r\n      # $ operator updates only the first matching element in the array.\r\n      # So we have to loop until nothing changes.\r\n      # See: https://jira.mongodb.org/browse/SERVER-1243\r\n      loop\r\n        break unless @sourceCollection.update selector, update, multi: true\r\n\r\n    # If it is an optional reference, we set it to null\r\n    else if not @required\r\n      update =\r\n        $set: {}\r\n      update.$set[@sourcePath] = null\r\n\r\n      @sourceCollection.update selector, update, multi: true\r\n\r\n    # Else, we remove the whole document\r\n    else\r\n      @sourceCollection.remove selector\r\n\r\n  updatedWithValue: (id, value) =>\r\n    unless _.isObject(value) and _.isString(value._id)\r\n      # Optional field\r\n      return if _.isNull(value) and not @required\r\n\r\n      # TODO: This is not triggered if required field simply do not exist or is set to undefined (does MongoDB support undefined value?)\r\n      Log.error \"Document's '#{ id }' field '#{ @sourcePath }' was updated with an invalid value: #{ util.inspect value }\"\r\n      return\r\n\r\n    # Only _id is requested, we do not have to do anything\r\n    unless _.isEmpty @fields\r\n      referenceFields = fieldsToProjection @fields\r\n      target = @targetCollection.findOne value._id,\r\n        fields: referenceFields\r\n        transform: null\r\n\r\n      unless target\r\n        Log.error \"Document's '#{ id }' field '#{ @sourcePath }' is referencing a nonexistent document '#{ value._id }'\"\r\n        # TODO: Should we call reference.removeSource here?\r\n        return\r\n\r\n      # We omit _id because that field cannot be changed, or even $set to the same value, but is in target\r\n      @updateSource target._id, _.omit target, '_id'\r\n\r\n    return unless @reverseName\r\n\r\n    reverseFields = fieldsToProjection @reverseFields\r\n    source = @sourceCollection.findOne id,\r\n      fields: reverseFields\r\n      transform: null\r\n\r\n    selector =\r\n      _id: value._id\r\n    selector[\"#{ @reverseName }._id\"] =\r\n      $ne: id\r\n\r\n    update = {}\r\n    update[@reverseName] = source\r\n\r\n    @targetCollection.update selector,\r\n      $addToSet: update\r\n\r\nclass globals.Document._GeneratedField extends globals.Document._GeneratedField\r\n  _updateSourceField: (id, fields) =>\r\n    [selector, sourceValue] = @generator fields\r\n\r\n    return unless selector\r\n\r\n    if @isArray and not _.isArray sourceValue\r\n      Log.error \"Generated field '#{ @sourcePath }' defined as an array with selector '#{ selector }' was updated with a non-array value: #{ util.inspect sourceValue }\"\r\n      return\r\n\r\n    if not @isArray and _.isArray sourceValue\r\n      Log.error \"Generated field '#{ @sourcePath }' not defined as an array with selector '#{ selector }' was updated with an array value: #{ util.inspect sourceValue }\"\r\n      return\r\n\r\n    update = {}\r\n    if _.isUndefined sourceValue\r\n      update.$unset = {}\r\n      update.$unset[@sourcePath] = ''\r\n    else\r\n      update.$set = {}\r\n      update.$set[@sourcePath] = sourceValue\r\n\r\n    @sourceCollection.update selector, update, multi: true\r\n\r\n  _updateSourceNestedArray: (id, fields) =>\r\n    assert @arraySuffix # Should be non-null\r\n\r\n    values = @generator fields\r\n\r\n    unless _.isArray values\r\n      Log.error \"Value returned from the generator for field '#{ @sourcePath }' is not a nested array despite field being nested in an array: #{ util.inspect values }\"\r\n      return\r\n\r\n    for [selector, sourceValue], i in values\r\n      continue unless selector\r\n\r\n      if _.isArray sourceValue\r\n        Log.error \"Generated field '#{ @sourcePath }' not defined as an array with selector '#{ selector }' was updated with an array value: #{ util.inspect sourceValue }\"\r\n        continue\r\n\r\n      path = \"#{ @ancestorArray }.#{ i }#{ @arraySuffix }\"\r\n\r\n      update = {}\r\n      if _.isUndefined sourceValue\r\n        update.$unset = {}\r\n        update.$unset[path] = ''\r\n      else\r\n        update.$set = {}\r\n        update.$set[path] = sourceValue\r\n\r\n      break unless @sourceCollection.update selector, update, multi: true\r\n\r\n  updateSource: (id, fields) =>\r\n    if _.isEmpty fields\r\n      fields._id = id\r\n    # TODO: Not completely correct when @fields contain multiple fields from same subdocument or objects with projections (they will be counted only once) - because Meteor always passed whole subdocuments we could count only top-level fields in @fields, merged with objects?\r\n    else if _.size(fields) isnt @fields.length\r\n      targetFields = fieldsToProjection @fields\r\n      fields = @targetCollection.findOne id,\r\n        fields: targetFields\r\n        transform: null\r\n\r\n      # There is a slight race condition here, document could be deleted in meantime.\r\n      # In such case we set fields as they are when document is deleted.\r\n      unless fields\r\n        fields =\r\n          _id: id\r\n    else\r\n      fields._id = id\r\n\r\n    # Only if we are updating value nested in a subdocument of an array we operate\r\n    # on the array. Otherwise we simply set whole array to the value returned.\r\n    if @inArray and not @isArray\r\n      @_updateSourceNestedArray id, fields\r\n    else\r\n      @_updateSourceField id, fields\r\n\r\n  removeSource: (id) =>\r\n    @updateSource id, {}\r\n\r\n  updatedWithValue: (id, value) =>\r\n    # Do nothing. Code should not be updating generated field by itself anyway.\r\n\r\nclass globals.Document extends globals.Document\r\n  @_sourceFieldProcessDeleted: (field, id, ancestorSegments, pathSegments, value) ->\r\n    if ancestorSegments.length\r\n      assert ancestorSegments[0] is pathSegments[0]\r\n      @_sourceFieldProcessDeleted field, id, ancestorSegments[1..], pathSegments[1..], value[ancestorSegments[0]]\r\n    else\r\n      value = [value] unless _.isArray value\r\n\r\n      ids = (extractValue(v, pathSegments)._id for v in value when extractValue(v, pathSegments)?._id)\r\n\r\n      assert field.reverseName\r\n\r\n      update = {}\r\n      update[field.reverseName] =\r\n        _id: id\r\n\r\n      field.targetCollection.update\r\n        _id:\r\n          $nin:\r\n            ids\r\n      ,\r\n        $pull: update\r\n      ,\r\n        multi: true\r\n\r\n  @_sourceFieldUpdated: (id, name, value, field, originalValue) ->\r\n    # TODO: Should we check if field still exists but just value is undefined, so that it is the same as null? Or can this happen only when removing the field?\r\n    if _.isUndefined value\r\n      if field?.reverseName\r\n        @_sourceFieldProcessDeleted field, id, [], name.split('.')[1..], originalValue\r\n      return\r\n\r\n    field = field or @Meta.fields[name]\r\n\r\n    # We should be subscribed only to those updates which are defined in @Meta.fields\r\n    assert field\r\n\r\n    originalValue = originalValue or value\r\n\r\n    if field instanceof globals.Document._ObservingField\r\n      if field.ancestorArray and name is field.ancestorArray\r\n        unless _.isArray value\r\n          Log.error \"Document's '#{ id }' field '#{ name }' was updated with a non-array value: #{ util.inspect value }\"\r\n          return\r\n      else\r\n        value = [value]\r\n\r\n      for v in value\r\n        field.updatedWithValue id, v\r\n\r\n      if field.reverseName\r\n        pathSegments = name.split('.')\r\n\r\n        if field.ancestorArray\r\n          ancestorSegments = field.ancestorArray.split('.')\r\n\r\n          assert ancestorSegments[0] is pathSegments[0]\r\n\r\n          @_sourceFieldProcessDeleted field, id, ancestorSegments[1..], pathSegments[1..], originalValue\r\n        else\r\n          @_sourceFieldProcessDeleted field, id, [], pathSegments[1..], originalValue\r\n\r\n    else if field not instanceof globals.Document._Field\r\n      value = [value] unless _.isArray value\r\n\r\n      # If value is an array but it should not be, we cannot do much else.\r\n      # Same goes if the value does not match structurally fields.\r\n      for v in value\r\n        for n, f of field\r\n          # TODO: Should we skip calling @_sourceFieldUpdated if we already called it with exactly the same parameters this run?\r\n          @_sourceFieldUpdated id, \"#{ name }.#{ n }\", v[n], f, originalValue\r\n\r\n  @_sourceUpdated: (id, fields) ->\r\n    for name, value of fields\r\n      @_sourceFieldUpdated id, name, value\r\n\r\n  @_setupSourceObservers: (updateAll) ->\r\n    return if _.isEmpty @Meta.fields\r\n\r\n    indexes = []\r\n    sourceFields =\r\n      _id: 1 # To make sure we do not pass empty set of fields\r\n\r\n    sourceFieldsWalker = (obj) ->\r\n      for name, field of obj\r\n        if field instanceof globals.Document._ObservingField\r\n          sourceFields[field.sourcePath] = 1\r\n          if field instanceof globals.Document._ReferenceField\r\n            index = {}\r\n            index[\"#{ field.sourcePath }._id\"] = 1\r\n            indexes.push index\r\n        else if field not instanceof globals.Document._Field\r\n          sourceFieldsWalker field\r\n\r\n    sourceFieldsWalker @Meta.fields\r\n\r\n    unless updateAll\r\n      for index in indexes\r\n        @Meta.collection._ensureIndex index\r\n\r\n    initializing = true\r\n\r\n    observers =\r\n      added: observerCallback (id, fields) =>\r\n        @_sourceUpdated id, fields if updateAll or not initializing\r\n\r\n    unless updateAll\r\n      observers.changed = observerCallback (id, fields) =>\r\n        @_sourceUpdated id, fields\r\n\r\n    handle = @Meta.collection.find({}, fields: sourceFields).observeChanges observers\r\n\r\n    initializing = false\r\n\r\n    handle.stop() if updateAll\r\n\r\n  @_Migration: class\r\n    updateAll: (document, collection, currentSchema, intoSchema) =>\r\n      @_updateAll = true\r\n\r\n    forward: (document, collection, currentSchema, newSchema) =>\r\n      migrated: 0\r\n      all: collection.update {_schema: currentSchema}, {$set: _schema: newSchema}, {multi: true}\r\n\r\n    backward: (document, collection, currentSchema, oldSchema) =>\r\n      migrated: 0\r\n      all: collection.update {_schema: currentSchema}, {$set: _schema: oldSchema}, {multi: true}\r\n\r\n  @PatchMigration: class extends @_Migration\r\n\r\n  @MinorMigration: class extends @_Migration\r\n\r\n  @MajorMigration: class extends @_Migration\r\n\r\n  @AddSyncedFieldsMigration: class extends @MinorMigration\r\n    forward: (document, collection, currentSchema, newSchema) =>\r\n      @updateAll document, collection, currentSchema, newSchema\r\n\r\n      counts = super\r\n      counts.migrated = counts.all\r\n      counts\r\n\r\n    backward: (document, collection, currentSchema, oldSchema) =>\r\n      @updateAll document, collection, currentSchema, oldSchema\r\n\r\n      counts = super\r\n      counts.migrated = counts.all\r\n      counts\r\n\r\n  @RemoveSyncedFieldsMigration: class extends @MajorMigration\r\n    forward: (document, collection, currentSchema, newSchema) =>\r\n      @updateAll document, collection, currentSchema, newSchema\r\n\r\n      counts = super\r\n      counts.migrated = counts.all\r\n      counts\r\n\r\n    backward: (document, collection, currentSchema, oldSchema) =>\r\n      @updateAll document, collection, currentSchema, oldSchema\r\n\r\n      counts = super\r\n      counts.migrated = counts.all\r\n      counts\r\n\r\n  @AddAutoFieldsMigration: class extends @MinorMigration\r\n    # Fields is an array\r\n    constructor: (fields) ->\r\n      @fields = fields if fields\r\n      super\r\n\r\n    forward: (document, collection, currentSchema, newSchema) =>\r\n      assert @fields\r\n\r\n      @updateAll document, collection, currentSchema, newSchema\r\n\r\n      counts = super\r\n      counts.migrated = counts.all\r\n      counts\r\n\r\n    backward: (document, collection, currentSchema, oldSchema) =>\r\n      update =\r\n        $unset: {}\r\n        $set:\r\n          _schema: oldSchema\r\n\r\n      for field in @fields\r\n        update.$unset[field] = ''\r\n\r\n      count = collection.update {_schema: currentSchema}, update, {multi: true}\r\n\r\n      counts = super\r\n      counts.migrated += count\r\n      counts.all += count\r\n      counts\r\n\r\n  @ModifyAutoFieldsMigration: class extends @MinorMigration\r\n    # Fields is an array\r\n    constructor: (fields) ->\r\n      @fields = fields if fields\r\n      super\r\n\r\n    forward: (document, collection, currentSchema, newSchema) =>\r\n      assert @fields\r\n\r\n      @updateAll document, collection, currentSchema, newSchema\r\n\r\n      counts = super\r\n      counts.migrated = counts.all\r\n      counts\r\n\r\n    backward: (document, collection, currentSchema, oldSchema) =>\r\n      assert @fields\r\n\r\n      @updateAll document, collection, currentSchema, oldSchema\r\n\r\n      counts = super\r\n      counts.migrated = counts.all\r\n      counts\r\n\r\n  @RemoveAutoFieldsMigration: class extends @MajorMigration\r\n    # Fields is an array\r\n    constructor: (fields) ->\r\n      @fields = fields if fields\r\n      super\r\n\r\n    forward: (document, collection, currentSchema, newSchema) =>\r\n      update =\r\n        $unset: {}\r\n        $set:\r\n          _schema: newSchema\r\n\r\n      for field in @fields\r\n        update.$unset[field] = ''\r\n\r\n      count = collection.update {_schema: currentSchema}, update, {multi: true}\r\n\r\n      counts = super\r\n      counts.migrated += count\r\n      counts.all += count\r\n      counts\r\n\r\n    backward: (document, collection, currentSchema, oldSchema) =>\r\n      assert @fields\r\n\r\n      @updateAll document, collection, currentSchema, oldSchema\r\n\r\n      counts = super\r\n      counts.migrated = counts.all\r\n      counts\r\n\r\n  @AddOptionalFieldsMigration: class extends @MinorMigration\r\n    # Fields is an array\r\n    constructor: (fields) ->\r\n      @fields = fields if fields\r\n      super\r\n\r\n    forward: (document, collection, currentSchema, newSchema) =>\r\n      assert @fields\r\n      super\r\n\r\n    backward: (document, collection, currentSchema, oldSchema) =>\r\n      update =\r\n        $unset: {}\r\n        $set:\r\n          _schema: oldSchema\r\n\r\n      for field in @fields\r\n        update.$unset[field] = ''\r\n\r\n      count = collection.update {_schema: currentSchema}, update, {multi: true}\r\n\r\n      counts = super\r\n      counts.migrated += count\r\n      counts.all += count\r\n      counts\r\n\r\n  @AddRequiredFieldsMigration: class extends @MinorMigration\r\n    # Fields is an object\r\n    constructor: (fields) ->\r\n      @fields = fields if fields\r\n      super\r\n\r\n    forward: (document, collection, currentSchema, newSchema) =>\r\n      selector =\r\n        _schema: currentSchema\r\n      for field, value of @fields\r\n        selector[field] =\r\n          $exists: false\r\n\r\n      update =\r\n        $set:\r\n          _schema: newSchema\r\n      for field, value of @fields\r\n        if _.isFunction value\r\n          update.$set[field] = value()\r\n        else\r\n          update.$set[field] = value\r\n\r\n      count = collection.update selector, update, {multi: true}\r\n\r\n      counts = super\r\n      counts.migrated += count\r\n      counts.all += count\r\n      counts\r\n\r\n    backward: (document, collection, currentSchema, oldSchema) =>\r\n      update =\r\n        $unset: {}\r\n        $set:\r\n          _schema: oldSchema\r\n\r\n      for field, value of @fields\r\n        update.$unset[field] = ''\r\n\r\n      count = collection.update {_schema: currentSchema}, update, {multi: true}\r\n\r\n      counts = super\r\n      counts.migrated += count\r\n      counts.all += count\r\n      counts\r\n\r\n  @RemoveFieldsMigration: class extends @MajorMigration\r\n    # Fields is an object\r\n    constructor: (fields) ->\r\n      @fields = fields if fields\r\n      super\r\n\r\n    forward: (document, collection, currentSchema, newSchema) =>\r\n      update =\r\n        $unset: {}\r\n        $set:\r\n          _schema: newSchema\r\n\r\n      for field, value of @fields\r\n        update.$unset[field] = ''\r\n\r\n      count = collection.update {_schema: currentSchema}, update, {multi: true}\r\n\r\n      counts = super\r\n      counts.migrated += count\r\n      counts.all += count\r\n      counts\r\n\r\n    backward: (document, collection, currentSchema, oldSchema) =>\r\n      selector =\r\n        _schema: currentSchema\r\n      for field, value of @fields\r\n        selector[field] =\r\n          $exists: false\r\n\r\n      update =\r\n        $set:\r\n          _schema: oldSchema\r\n      for field, value of @fields\r\n        if _.isFunction value\r\n          v = value()\r\n        else\r\n          v = value\r\n        update.$set[field] = v unless _.isUndefined v\r\n\r\n      count = collection.update selector, update, {multi: true}\r\n\r\n      counts = super\r\n      counts.migrated += count\r\n      counts.all += count\r\n      counts\r\n\r\n  @RenameFieldsMigration: class extends @MajorMigration\r\n    # Fields is object\r\n    constructor: (fields) ->\r\n      @fields = fields if fields\r\n      super\r\n\r\n    forward: (document, collection, currentSchema, newSchema) =>\r\n      update =\r\n        $set:\r\n          _schema: newSchema\r\n        $rename: {}\r\n\r\n      for from, to of @fields\r\n        update.$rename[from] = to\r\n\r\n      count = collection.update {_schema: currentSchema}, update, {multi: true}\r\n\r\n      counts = super\r\n      counts.migrated += count\r\n      counts.all += count\r\n      counts\r\n\r\n    backward: (document, collection, currentSchema, oldSchema) =>\r\n      update =\r\n        $set:\r\n          _schema: oldSchema\r\n        $rename: {}\r\n\r\n      for from, to of @fields\r\n        # Reversed\r\n        update.$rename[to] = from\r\n\r\n      count = collection.update {_schema: currentSchema}, update, {multi: true}\r\n\r\n      counts = super\r\n      counts.migrated += count\r\n      counts.all += count\r\n      counts\r\n\r\n  @_RenameCollectionMigration: class extends @MajorMigration\r\n    constructor: (@oldName, @newName) ->\r\n      @name = \"Renaming collection from '#{ @oldName }' to '#{ @newName }'\"\r\n\r\n    _rename: (mongoCollection, to, callback) =>\r\n      mongoCollection.rename to, (error, collection) =>\r\n        if error\r\n          return callback error unless /source namespace does not exist/.test \"#{ error }\"\r\n        callback null\r\n\r\n    forward: (document, collection, currentSchema, newSchema) =>\r\n      assert.equal collection.name, @oldName\r\n\r\n      mongoCollection = MongoInternals.defaultRemoteCollectionDriver().mongo._getCollection @oldName\r\n\r\n      future = new Future()\r\n      @_rename mongoCollection, @newName, future.resolver()\r\n      future.wait()\r\n\r\n      collection.name = @newName\r\n\r\n      # We renamed the collection, so let's update all documents to new schema version\r\n      counts = super\r\n      # We migrated everything\r\n      counts.migrated = counts.all\r\n      counts\r\n\r\n    backward: (document, collection, currentSchema, newSchema) =>\r\n      assert.equal collection.name, @newName\r\n\r\n      mongoCollection = MongoInternals.defaultRemoteCollectionDriver().mongo._getCollection @newName\r\n\r\n      future = new Future()\r\n      @_rename mongoCollection, @oldName, future.resolver()\r\n      future.wait()\r\n\r\n      collection.name = @oldName\r\n\r\n      # We renamed the collection, so let's update all documents to old schema version\r\n      counts = super\r\n      # We migrated everything\r\n      counts.migrated = counts.all\r\n      counts\r\n\r\n  @addMigration: (migration) ->\r\n    throw new Error \"Migration is missing a name\" unless migration.name\r\n    throw new Error \"Migration is not a migration instance\" unless migration instanceof @_Migration\r\n    throw new Error \"Migration with the name '#{ migration.name }' already exists\" if migration.name in _.pluck @Meta.migrations, 'name'\r\n\r\n    @Meta.migrations.push migration\r\n\r\n  @renameCollectionMigration: (oldName, newName) ->\r\n    @addMigration new @_RenameCollectionMigration oldName, newName\r\n\r\n  @migrateForward: (untilName) ->\r\n    # TODO: Implement\r\n    throw new Error \"Not implemented yet\"\r\n\r\n  @migrateBackward: (untilName) ->\r\n    # TODO: Implement\r\n    throw new Error \"Not implemented yet\"\r\n\r\n  @migrate: ->\r\n    schemas = ['1.0.0']\r\n    currentSchema = '1.0.0'\r\n    currentSerial = 0\r\n\r\n    initialName = @Meta.collection._name\r\n    for migration in @Meta.migrations by -1 when migration instanceof @_RenameCollectionMigration\r\n      throw new Error \"Incosistent document renaming, renaming from '#{ migration.oldName }' to '#{ migration.newName }', but current name is '#{ initialName }' (new name and current name should match)\" if migration.newName isnt initialName\r\n      initialName = migration.oldName\r\n\r\n    migrationsPending = Number.POSITIVE_INFINITY\r\n    currentName = initialName\r\n    for migration, i in @Meta.migrations\r\n      if migration instanceof @PatchMigration\r\n        newSchema = semver.inc currentSchema, 'patch'\r\n      else if migration instanceof @MinorMigration\r\n        newSchema = semver.inc currentSchema, 'minor'\r\n      else if migration instanceof @MajorMigration\r\n        newSchema = semver.inc currentSchema, 'major'\r\n\r\n      if migration instanceof @_RenameCollectionMigration\r\n        newName = migration.newName\r\n      else\r\n        newName = currentName\r\n\r\n      migrations = globals.Document.Migrations.find(\r\n        serial:\r\n          $gt: currentSerial\r\n        oldCollectionName:\r\n          $in: [currentName, newName]\r\n      ,\r\n        sort: [\r\n          ['serial', 'asc']\r\n        ]\r\n      ).fetch()\r\n\r\n      if migrations[0]\r\n        throw new Error \"Unexpected migration recorded: #{ util.inspect migrations[0], depth: 10 }\" if migrationsPending < Number.POSITIVE_INFINITY\r\n\r\n        if migrations[0].migrationName is migration.name and migrations[0].oldCollectionName is currentName and migrations[0].newCollectionName is newName and migrations[0].oldVersion is currentSchema and migrations[0].newVersion is newSchema\r\n          currentSerial = migrations[0].serial\r\n        else\r\n          throw new Error \"Incosistent migration recorded, expected migrationName='#{ migration.name }', oldCollectionName='#{ currentName }', newCollectionName='#{ newName }', oldVersion='#{ currentSchema }', newVersion='#{ newSchema }', got: #{ util.inspect migrations[0], depth: 10 }\"\r\n      else if migrationsPending is Number.POSITIVE_INFINITY\r\n        # This is the collection name recorded as the last, so we start with it\r\n        initialName = currentName\r\n        migrationsPending = i\r\n\r\n      currentSchema = newSchema\r\n      schemas.push currentSchema\r\n      currentName = newName\r\n\r\n    unknownSchema = _.pluck @Meta.collection.find(\r\n      _schema:\r\n        $nin: schemas\r\n        $exists: true\r\n    ,\r\n      fields:\r\n        _id: 1\r\n    ).fetch(), '_id'\r\n\r\n    throw new Error \"Documents with unknown schema version: #{ unknownSchema }\" if unknownSchema.length\r\n\r\n    updateAll = false\r\n\r\n    currentSchema = '1.0.0'\r\n    currentSerial = 0\r\n    currentName = initialName\r\n    for migration, i in @Meta.migrations\r\n      if migration instanceof @PatchMigration\r\n        newSchema = semver.inc currentSchema, 'patch'\r\n      else if migration instanceof @MinorMigration\r\n        newSchema = semver.inc currentSchema, 'minor'\r\n      else if migration instanceof @MajorMigration\r\n        newSchema = semver.inc currentSchema, 'major'\r\n\r\n      if i < migrationsPending and migration instanceof @_RenameCollectionMigration\r\n        # We skip all already done rename migrations (but we run other old migrations again, just with the last known collection name)\r\n        currentSchema = newSchema\r\n        currentName = migration.newName\r\n        continue\r\n\r\n      if migration instanceof @_RenameCollectionMigration\r\n        newName = migration.newName\r\n      else\r\n        newName = currentName\r\n\r\n      if globals.Document.migrationsDisabled\r\n        # Migrations are disabled but we are still running\r\n        # the code just to compute the latest schema version\r\n        currentSchema = newSchema\r\n        currentName = newName\r\n        continue\r\n\r\n      migration._updateAll = false\r\n\r\n      counts = migration.forward @, new DirectCollection(currentName), currentSchema, newSchema\r\n      throw new Error \"Invalid return value from migration: #{ util.inspect counts }\" unless 'migrated' of counts and 'all' of counts\r\n\r\n      updateAll = true if counts.migrated and migration._updateAll\r\n\r\n      if i < migrationsPending\r\n        count = globals.Document.Migrations.update\r\n          migrationName: migration.name\r\n          oldCollectionName: currentName\r\n          newCollectionName: newName\r\n          oldVersion: currentSchema\r\n          newVersion: newSchema\r\n        ,\r\n          $inc:\r\n            migrated: counts.migrated\r\n            all: counts.all\r\n        ,\r\n          multi: true # To catch any errors\r\n\r\n        throw new Error \"Incosistent migration record state, missing migrationName='#{ migration.name }', oldCollectionName='#{ currentName }', newCollectionName='#{ newName }', oldVersion='#{ currentSchema }', newVersion='#{ newSchema }'\" unless count is 1\r\n      else\r\n        count = globals.Document.Migrations.find(\r\n          migrationName: migration.name\r\n          oldCollectionName: currentName\r\n          newCollectionName: newName\r\n          oldVersion: currentSchema\r\n          newVersion: newSchema\r\n        ).count()\r\n\r\n        throw new Error \"Incosistent migration record state, unexpected migrationName='#{ migration.name }', oldCollectionName='#{ currentName }', newCollectionName='#{ newName }', oldVersion='#{ currentSchema }', newVersion='#{ newSchema }'\" unless count is 0\r\n\r\n        globals.Document.Migrations.insert\r\n          # Things should not be running in parallel here anyway, so we can get next serial in this way\r\n          serial: globals.Document.Migrations.findOne({}, {sort: [['serial', 'desc']]}).serial + 1\r\n          migrationName: migration.name\r\n          oldCollectionName: currentName\r\n          newCollectionName: newName\r\n          oldVersion: currentSchema\r\n          newVersion: newSchema\r\n          migrated: counts.migrated\r\n          all: counts.all\r\n          timestamp: moment.utc().toDate()\r\n\r\n      if migration instanceof @_RenameCollectionMigration\r\n        Log.info \"Renamed collection '#{ currentName }' to '#{ newName }'\"\r\n        Log.info \"Migrated #{ counts.migrated }/#{ counts.all } document(s) (from #{ currentSchema } to #{ newSchema }): #{ migration.name }\" if counts.all\r\n      else\r\n        Log.info \"Migrated #{ counts.migrated }/#{ counts.all } document(s) in '#{ currentName }' collection (from #{ currentSchema } to #{ newSchema }): #{ migration.name }\" if counts.all\r\n\r\n      currentSchema = newSchema\r\n      currentName = newName\r\n\r\n    # We do not check for not migrated documents if migrations are disabled\r\n    unless globals.Document.migrationsDisabled\r\n      # For all those documents which lack schema information we assume they have the last schema\r\n      @Meta.collection.update\r\n        _schema:\r\n          $exists: false\r\n      ,\r\n        $set:\r\n          _schema: currentSchema\r\n      ,\r\n        multi: true\r\n\r\n      notMigrated = _.pluck @Meta.collection.find(\r\n        _schema:\r\n          $ne: currentSchema\r\n      ,\r\n        fields:\r\n          _id: 1\r\n      ).fetch(), '_id'\r\n\r\n      throw new Error \"Not all documents migrated to the latest schema version (#{ currentSchema }): #{ notMigrated }\" if notMigrated.length\r\n\r\n    @Meta.schema = currentSchema\r\n\r\n    # Return if updateAll should be called\r\n    updateAll\r\n\r\n  @_setupMigrations: ->\r\n    updateAll = @migrate()\r\n\r\n    unless globals.Document.instanceDisabled\r\n      @Meta.collection.find(\r\n        _schema:\r\n          $exists: false\r\n      ,\r\n        fields:\r\n          _id: 1\r\n          _schema: 1\r\n      ).observeChanges\r\n        added: observerCallback (id, fields) =>\r\n          # TODO: Check if schema is known and complain if not\r\n          # TODO: We could automatically migrate old documents if we know of newer schema\r\n          return if fields._schema\r\n\r\n          @Meta.collection.update id,\r\n            $set:\r\n              _schema: @Meta.schema\r\n\r\n    # Return if updateAll should be called\r\n    updateAll\r\n\r\n  @updateAll: ->\r\n    # It is only reasonable to run anything if this instance\r\n    # is not disabled. Otherwise we would still go over all\r\n    # documents, just we would not process any.\r\n    setupObservers true unless globals.Document.instanceDisabled\r\n\r\n# TODO: What happens if this is called multiple times? We should make sure that for each document observrs are made only once\r\nsetupObservers = (updateAll) ->\r\n  setupTriggerObserves = (triggers) ->\r\n    for name, trigger of triggers\r\n      trigger._setupObservers()\r\n\r\n  setupTargetObservers = (fields) ->\r\n    for name, field of fields\r\n      # There are no arrays anymore here, just objects (for subdocuments) or fields\r\n      if field instanceof globals.Document._TargetedFieldsObservingField\r\n        field._setupTargetObservers updateAll\r\n      else if field not instanceof globals.Document._Field\r\n        setupTargetObservers field\r\n\r\n  for document in globals.Document.list\r\n    # We setup triggers only when we are not updating all\r\n    setupTriggerObserves document.Meta.triggers unless updateAll\r\n    # For fields we pass updateAll on\r\n    setupTargetObservers document.Meta.fields\r\n    document._setupSourceObservers updateAll\r\n\r\n# TODO: What happens if this is called multiple times? We should make sure that for each document observrs are made only once\r\nsetupMigrations = ->\r\n  updateAll = false\r\n  # Migrate all except local collections\r\n  for document in globals.Document.list when document.Meta.collection._name isnt null\r\n    # Always run setupMigrations, don't short circuit\r\n    updateAll = document._setupMigrations() or updateAll\r\n\r\n  if updateAll\r\n    Log.info \"Migrations requested updating all references...\"\r\n    globals.Document.updateAll()\r\n    Log.info \"Done\"\r\n\r\nmigrations = ->\r\n  if globals.Document.Migrations.find({}, limit: 1).count() == 0\r\n    globals.Document.Migrations.insert\r\n      serial: 1\r\n      migrationName: null\r\n      oldCollectionName: null\r\n      newCollectionName: null\r\n      oldVersion: null\r\n      newVersion: null\r\n      timestamp: moment.utc().toDate()\r\n      migrated: 0\r\n      all: 0\r\n\r\n  setupMigrations()\r\n\r\nglobals.Document.migrationsDisabled = !!process.env.PEERDB_MIGRATIONS_DISABLED\r\nglobals.Document.instanceDisabled = INSTANCES is 0\r\nglobals.Document.instances = INSTANCES\r\n\r\nMeteor.startup ->\r\n  # To try delayed references one last time, throwing any exceptions\r\n  # (Otherwise setupObservers would trigger strange exceptions anyway)\r\n  globals.Document.defineAll()\r\n\r\n  Log.info \"Skipped migrations\" if globals.Document.migrationsDisabled\r\n  # We still run the code to determine schema version and setup\r\n  # observer to set schema version when inserting new documents,\r\n  # but we then inside the code skip running migrations themselves\r\n  migrations()\r\n\r\n  if globals.Document.instanceDisabled\r\n    Log.info \"Skipped observers\"\r\n    # To make sure everything is really skipped\r\n    PREFIX = []\r\n  else\r\n    if globals.Document.instances is 1\r\n      Log.info \"Enabling observers...\"\r\n    else\r\n      Log.info \"Enabling observers, instance #{ INSTANCE }/#{ globals.Document.instances }, matching ID prefix: #{ PREFIX.join '' }\"\r\n    setupObservers()\r\n    Log.info \"Done\"\r\n\r\nDocument = globals.Document\r\n\r\nassert globals.Document._ReferenceField.prototype instanceof globals.Document._TargetedFieldsObservingField\r\nassert globals.Document._GeneratedField.prototype instanceof globals.Document._TargetedFieldsObservingField\r\n"]}