{"version":3,"file":"\\packages\\directcollection:tests.js","sources":["directcollection\\tests.coffee"],"names":[],"mappings":";;;;;;;;;AAAA,QAAQ,CAAC,GAAT,CAAa,0BAAb,EAAyC,SAAC,IAAD;AACvC;mBAAqB,qBAAiB,QAAjB,CAArB;EAGA,cAAc,CAAC,MAAf,CAAsB,EAAtB,CAHA;EAKA,IAAI,CAAC,KAAL,CAAW,cAAc,CAAC,KAAf,CAAqB,EAArB,CAAX,EAAqC,CAArC,CALA;EAOA,YACE;SAAK,MAAL;IACA,KAAK,KADL;GARF;EAUA,cAAc,cAAc,CAAC,MAAf,CAAsB,SAAtB,CAVd;EAaA,IAAI,CAAC,OAAL,CAAa,SAAS,CAAC,GAAvB,CAbA;EAcA,SAAS,CAAC,GAAV,GAAgB,WAdhB;EAgBA,IAAI,CAAC,MAAL,CAAY,CAAC,CAAC,QAAF,CAAW,SAAS,CAAC,GAArB,CAAZ,CAhBA;EAiBA,IAAI,CAAC,KAAL,CAAW,cAAc,CAAC,OAAf,CAAuB;SAAK,SAAS,CAAC,GAAf;GAAvB,CAAX,EAAuD,SAAvD,CAjBA;EAkBA,IAAI,CAAC,KAAL,CAAW,cAAc,CAAC,OAAf,CAAuB,SAAvB,CAAX,EAA8C,SAA9C,CAlBA;EAoBA,YACE;SAAK,MAAL;IACA,KAAK,MADL;IAEA,KAAK,KAFL;GArBF;EAwBA,cAAc,cAAc,CAAC,MAAf,CAAsB,SAAtB,CAxBd;EA0BA,IAAI,CAAC,KAAL,CAAW,SAAS,CAAC,GAArB,EAA0B,MAA1B,CA1BA;EA2BA,IAAI,CAAC,KAAL,CAAW,WAAX,EAAwB,MAAxB,CA3BA;EA6BA,IAAI,CAAC,KAAL,CAAW,cAAc,CAAC,OAAf,CAAuB;SAAK,SAAS,CAAC,GAAf;GAAvB,CAAX,EAAuD,SAAvD,CA7BA;EA8BA,IAAI,CAAC,KAAL,CAAW,cAAc,CAAC,OAAf,CAAuB,SAAvB,CAAX,EAA8C,SAA9C,CA9BA;EAgCA,IAAI,CAAC,KAAL,CAAW,cAAc,CAAC,KAAf,CAAqB,EAArB,CAAX,EAAqC,CAArC,CAhCA;EAkCA,IAAI,CAAC,KAAL,CAAW,cAAc,CAAC,KAAf,CAAqB;SAAK,MAAL;GAArB,CAAX,EAA8C,CAA9C,CAlCA;EAmCA,IAAI,CAAC,KAAL,CAAW,cAAc,CAAC,KAAf,CAAqB;SAAK,KAAL;GAArB,CAAX,EAA6C,CAA7C,CAnCA;EAqCA,IAAI,CAAC,KAAL,CAAW,cAAc,CAAC,WAAf,CAA2B,EAA3B,CAAX,EAA2C,CAAC,SAAD,EAAY,SAAZ,CAA3C,CArCA;EAuCA,eAAe,CAvCf;EAyCA,cAAc,CAAC,QAAf,CAAwB,EAAxB,EAA4B,SAAC,QAAD;AAC1B,UAAM,CAAC,sBAAP;IAEA,cAFA;AAGA,QAAG,iBAAgB,CAAnB;aACE,IAAI,CAAC,KAAL,CAAW,SAAX,EAAsB,QAAtB,EADF;WAEK,IAAG,iBAAgB,CAAnB;aACH,IAAI,CAAC,KAAL,CAAW,SAAX,EAAsB,QAAtB,EADG;;aAGH,IAAI,CAAC,IAAL,CACE;cAAM,MAAN;QACA,SAAS,2BAA2B,YADpC;OADF,EAHG;KANqB;GAA5B,CAzCA;EAsDA,IAAI,CAAC,KAAL,CAAW,YAAX,EAAyB,CAAzB,CAtDA;EAwDA,IAAI,CAAC,MAAL,CAAY;WACV,cAAc,CAAC,QAAf,CAAwB,EAAxB,EAA4B,SAAC,QAAD;AAC1B,YAAU,UAAM,MAAN,CAAV,CAD0B;KAA5B,EADU;GAAZ,EAGE,MAHF,CAxDA;EA6DA,UAAU,cAAc,CAAC,MAAf,CAAsB,EAAtB,EACR;UACE;WAAK,OAAL;KADF;GADQ,CA7DV;EAiEA,SAAS,CAAC,GAAV,GAAgB,OAjEhB;EAmEA,IAAI,CAAC,KAAL,CAAW,OAAX,EAAoB,CAApB,CAnEA;EAoEA,IAAI,CAAC,KAAL,CAAW,cAAc,CAAC,WAAf,CAA2B,EAA3B,CAAX,EAA2C,CAAC,SAAD,EAAY,SAAZ,CAA3C,CApEA;EAsEA,UAAU,cAAc,CAAC,MAAf,CAAsB,EAAtB,EACR;UACE;WAAK,MAAL;KADF;GADQ,EAIR;WAAO,IAAP;GAJQ,CAtEV;EA4EA,SAAS,CAAC,GAAV,GAAgB,MA5EhB;EA6EA,SAAS,CAAC,GAAV,GAAgB,MA7EhB;EA+EA,IAAI,CAAC,KAAL,CAAW,OAAX,EAAoB,CAApB,CA/EA;EAgFA,IAAI,CAAC,KAAL,CAAW,cAAc,CAAC,WAAf,CAA2B,EAA3B,CAAX,EAA2C,CAAC,SAAD,EAAY,SAAZ,CAA3C,CAhFA;EAkFA,UAAU,cAAc,CAAC,MAAf,CAAsB;SAAK,MAAL;GAAtB,CAlFV;EAoFA,IAAI,CAAC,KAAL,CAAW,OAAX,EAAoB,CAApB,CApFA;EAqFA,IAAI,CAAC,KAAL,CAAW,cAAc,CAAC,KAAf,CAAqB,EAArB,CAAX,EAAqC,CAArC,CArFA;EAuFA,UAAU,cAAc,CAAC,MAAf,CAAsB,EAAtB,CAvFV;EAyFA,IAAI,CAAC,KAAL,CAAW,OAAX,EAAoB,CAApB,CAzFA;SA0FA,IAAI,CAAC,KAAL,CAAW,cAAc,CAAC,KAAf,CAAqB,EAArB,CAAX,EAAqC,CAArC,EA3FuC;CAAzC;A","sourcesContent":["Tinytest.add 'directcollection - basic', (test) ->\r\n  testCollection = new DirectCollection 'direct'\r\n\r\n  # First cleanup\r\n  testCollection.remove {}\r\n\r\n  test.equal testCollection.count({}), 0\r\n\r\n  document1 =\r\n    foo: 'bar1'\r\n    faa: 'zar'\r\n  document1Id = testCollection.insert document1\r\n\r\n  # insert should not modify document1 directly\r\n  test.isFalse document1._id\r\n  document1._id = document1Id\r\n\r\n  test.isTrue _.isString document1._id\r\n  test.equal testCollection.findOne(_id: document1._id), document1\r\n  test.equal testCollection.findOne(document1), document1\r\n\r\n  document2 =\r\n    _id: 'test'\r\n    foo: 'bar2'\r\n    faa: 'zar'\r\n  document2Id = testCollection.insert document2\r\n\r\n  test.equal document2._id, 'test'\r\n  test.equal document2Id, 'test'\r\n\r\n  test.equal testCollection.findOne(_id: document2._id), document2\r\n  test.equal testCollection.findOne(document2), document2\r\n\r\n  test.equal testCollection.count({}), 2\r\n\r\n  test.equal testCollection.count(foo: 'bar2'), 1\r\n  test.equal testCollection.count(faa: 'zar'), 2\r\n\r\n  test.equal testCollection.findToArray({}), [document1, document2]\r\n\r\n  correctOrder = 0\r\n\r\n  testCollection.findEach {}, (document) ->\r\n    Meteor._nodeCodeMustBeInFiber()\r\n\r\n    correctOrder++\r\n    if correctOrder is 1\r\n      test.equal document1, document\r\n    else if correctOrder is 2\r\n      test.equal document2, document\r\n    else\r\n      test.fail\r\n        type: 'fail'\r\n        message: \"Invalid correctOrder: \" + correctOrder\r\n\r\n  test.equal correctOrder, 2\r\n\r\n  test.throws ->\r\n    testCollection.findEach {}, (document) ->\r\n      throw new Error 'test'\r\n  , /test/\r\n\r\n  updates = testCollection.update {},\r\n    $set:\r\n      foo: 'bar1a'\r\n\r\n  document1.foo = 'bar1a'\r\n\r\n  test.equal updates, 1\r\n  test.equal testCollection.findToArray({}), [document1, document2]\r\n\r\n  updates = testCollection.update {},\r\n    $set:\r\n      faa: 'zar2'\r\n  ,\r\n    multi: true\r\n\r\n  document1.faa = 'zar2'\r\n  document2.faa = 'zar2'\r\n\r\n  test.equal updates, 2\r\n  test.equal testCollection.findToArray({}), [document1, document2]\r\n\r\n  removed = testCollection.remove foo: 'bar2'\r\n\r\n  test.equal removed, 1\r\n  test.equal testCollection.count({}), 1\r\n\r\n  removed = testCollection.remove {}\r\n\r\n  test.equal removed, 1\r\n  test.equal testCollection.count({}), 0\r\n"]}