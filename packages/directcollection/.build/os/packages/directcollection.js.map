{"version":3,"file":"\\packages\\directcollection.js","sources":["directcollection\\direct.coffee"],"names":[],"mappings":"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","sourcesContent":["Future = Npm.require 'fibers/future'\r\n\r\nclass DirectCollection\r\n  constructor: (@name, @_makeNewID) ->\r\n    unless @_makeNewID\r\n      @_makeNewID = -> Random.id()\r\n\r\n  findToArray: (selector, options) =>\r\n    options = {} unless options\r\n    cursor = MongoInternals.defaultRemoteCollectionDriver().mongo._getCollection(@name).find(selector, options)\r\n    blocking(cursor, cursor.toArray)()\r\n\r\n  findEach: (selector, options, eachCallback) =>\r\n    if _.isFunction options\r\n      eachCallback = options\r\n      options = {}\r\n    options = {} unless options\r\n\r\n    future = new Future()\r\n\r\n    callback = (error, document) =>\r\n      # An error might be thrown from the eachCallback, so we skip the rest\r\n      return if future.isResolved()\r\n\r\n      if error\r\n        future.throw error\r\n      else if document\r\n        eachCallback document\r\n      else\r\n        future.return()\r\n\r\n    errorHandler = (error) =>\r\n      future.throw error if error and not future.isResolved()\r\n\r\n    callback = Meteor.bindEnvironment callback, errorHandler, @\r\n\r\n    MongoInternals.defaultRemoteCollectionDriver().mongo._getCollection(@name).find(selector, options).each(callback)\r\n\r\n    future.wait()\r\n    return\r\n\r\n  count: (selector, options) =>\r\n    options = {} unless options\r\n    collection = MongoInternals.defaultRemoteCollectionDriver().mongo._getCollection(@name)\r\n    blocking(collection, collection.count)(selector, options)\r\n\r\n  findOne: (selector, options) =>\r\n    options = {} unless options\r\n    collection = MongoInternals.defaultRemoteCollectionDriver().mongo._getCollection(@name)\r\n    blocking(collection, collection.findOne)(selector, options)\r\n\r\n  insert: (document) =>\r\n    unless '_id' of document\r\n      document = EJSON.clone document\r\n      document._id = @_makeNewID()\r\n    collection = MongoInternals.defaultRemoteCollectionDriver().mongo._getCollection(@name)\r\n    blocking(collection, collection.insert)(document, w: 1)\r\n    return document._id\r\n\r\n  update: (selector, modifier, options) =>\r\n    options = {} unless options\r\n    options.w = 1\r\n    collection = MongoInternals.defaultRemoteCollectionDriver().mongo._getCollection(@name)\r\n    blocking(collection, collection.update)(selector, modifier, options)\r\n\r\n  remove: (selector) =>\r\n    collection = MongoInternals.defaultRemoteCollectionDriver().mongo._getCollection(@name)\r\n    blocking(collection, collection.remove)(selector, w: 1)\r\n"]}