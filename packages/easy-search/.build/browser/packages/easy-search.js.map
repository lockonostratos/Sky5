{"version":3,"file":"\\packages\\easy-search.js","sources":["easy-search/lib\\easy-search-client.js","easy-search/lib\\components\\easy-search-components.html","easy-search/lib\\components\\easy-search-components.js","easy-search/lib\\easy-search-convenience.js"],"names":[],"mappings":";;;;;;;;AAAA,a;;AAEA,G;AACA,mC;AACA,6D;AACA,4B;AACA,e;AACA,E;AACA,qB;AACA,G;;AAEA,2B;AACA,oB;AACA,qB;AACA,U;AACA,qB;AACA,I;AACA,O;AACA,wD;AACA,M;AACA,0B;AACA,M;AACA,sB;AACA,O;AACA,oC;AACA,yE;AACA,K;;AAEA,Y;AACA,W;AACA,gD;AACA,U;AACA,+B;AACA,kC;AACA,W;AACA,wD;AACA,gC;AACA,mC;;AAEA,uF;AACA,iE;AACA,uD;AACA,U;AACA,W;AACA,kD;AACA,U;AACA,+B;AACA,uC;AACA,qC;AACA,sB;AACA,W;AACA,4D;AACA,oG;AACA,U;AACA,W;AACA,wC;AACA,U;AACA,iC;AACA,uC;AACA,qC;AACA,sB;AACA,W;AACA,uE;AACA,6C;AACA,wG;AACA,e;AACA,U;AACA,W;AACA,mF;AACA,U;AACA,+B;AACA,8B;AACA,gC;AACA,sB;AACA,W;AACA,uD;AACA,gC;AACA,+B;;AAEA,uC;AACA,U;AACA,W;AACA,mD;AACA,U;AACA,+B;AACA,2B;AACA,sB;AACA,W;AACA,sC;AACA,iC;AACA,U;AACA,W;AACA,4C;AACA,U;AACA,0B;AACA,sB;AACA,W;AACA,oC;AACA,2B;AACA,S;AACA,M;AACA,K;;;;;;;;;;;;;;;;;;;;ACpGA,4C;AACA,kB;AACA,qB;AACA,iB;AACA,oB;AACA,mD;AACA,M;AACA,6B;AACA,4D;AACA,M;AACA,yB;AACA,wD;AACA,K;AACA,K;AACA,I;;AAEA,2C;AACA,kB;AACA,gC;AACA,2D;AACA,iB;AACA,wE;AACA,gD;AACA,gD;AACA,qB;AACA,6C;AACA,2D;AACA,W;AACA,S;AACA,mB;AACA,K;AACA,I;;AAEA,oD;AACA,kB;AACA,8B;AACA,sD;AACA,iB;AACA,wE;AACA,2C;AACA,yD;AACA,S;AACA,mB;AACA,iB;AACA,gD;AACA,oD;AACA,mB;AACA,8E;AACA,6C;AACA,wD;AACA,W;AACA,yB;AACA,mB;AACA,K;AACA,I;;AAEA,qD;AACA,kB;AACA,8B;AACA,uD;AACA,iB;AACA,wE;AACA,2C;AACA,yD;AACA,S;AACA,mB;AACA,iB;AACA,gD;AACA,oD;AACA,mB;AACA,8E;AACA,6C;AACA,wD;AACA,W;AACA,yB;AACA,mB;AACA,K;AACA,I;;AAEA,qD;AACA,kB;AACA,8B;AACA,yD;AACA,iB;AACA,wC;AACA,sB;AACA,qD;AACA,Q;AACA,2B;AACA,0D;AACA,O;AACA,8B;AACA,wD;AACA,oB;AACA,K;AACA,I;;AAEA,kD;AACA,kB;AACA,mB;AACA,sC;AACA,2B;AACA,mD;AACA,M;AACA,8B;AACA,sD;AACA,K;AACA,8B;AACA,8B;AACA,8C;AACA,wD;AACA,iB;AACA,8C;AACA,sB;AACA,yC;AACA,gB;AACA,uB;AACA,8D;AACA,sD;AACA,kD;AACA,gF;AACA,Y;AACA,kD;AACA,4C;AACA,8D;AACA,sD;AACA,qD;AACA,M;AACA,iB;AACA,6D;AACA,+B;AACA,yB;AACA,6E;AACA,K;AACA,0D;AACA,Y;AACA,kD;AACA,2C;AACA,M;AACA,iB;AACA,kF;AACA,sF;AACA,mB;AACA,wE;AACA,gB;AACA,sD;AACA,gD;AACA,yD;AACA,U;AACA,qB;AACA,4E;AACA,kE;AACA,wF;AACA,yB;AACA,8E;AACA,4G;AACA,2B;AACA,kE;AACA,qC;AACA,qE;AACA,iB;AACA,0F;AACA,wD;AACA,6B;AACA,qD;AACA,gG;AACA,mB;AACA,oF;AACA,2C;AACA,yB;AACA,8E;AACA,4G;AACA,2B;AACA,kE;AACA,qC;AACA,qE;AACA,iB;AACA,+D;AACA,0B;AACA,qC;AACA,kF;AACA,8D;AACA,6B;AACA,gC;AACA,wC;AACA,gE;AACA,0C;AACA,+D;AACA,2H;AACA,2C;AACA,qC;AACA,W;AACA,6B;AACA,O;AACA,+B;AACA,I;;;;;;;;;;;;;;;;;;;ACpMA,c;AACA,iB;;AAEA,e;AACA,iB;AACA,mB;AACA,mB;AACA,mB;AACA,8B;AACA,iD;;AAEA,qB;AACA,gB;AACA,6B;AACA,0B;AACA,yB;AACA,M;;AAEA,0B;AACA,0C;;AAEA,kB;AACA,oC;AACA,qG;AACA,U;AACA,oC;AACA,iE;AACA,S;AACA,M;;AAEA,qB;AACA,iF;AACA,qE;AACA,uG;;AAEA,qB;AACA,kB;AACA,sB;AACA,gC;AACA,0C;AACA,mC;AACA,U;AACA,wD;AACA,4B;;AAEA,sD;AACA,6B;AACA,8B;AACA,sC;AACA,U;AACA,qC;AACA,0D;AACA,S;AACA,M;;AAEA,qD;AACA,0D;AACA,K;AACA,8B;AACA,0B;AACA,8B;AACA,gC;AACA,iE;AACA,c;;AAEA,mB;AACA,S;;AAEA,mC;AACA,0B;AACA,4B;AACA,a;AACA,4B;AACA,+B;AACA,0E;AACA,a;AACA,U;AACA,K;;AAEA,oC;AACA,mC;AACA,mC;AACA,qC;AACA,yC;;AAEA,qC;AACA,iF;AACA,0E;AACA,mB;AACA,S;;AAEA,oE;AACA,sB;AACA,+D;AACA,a;;AAEA,gC;AACA,oC;AACA,qC;AACA,uC;AACA,+C;AACA,4C;AACA,e;;AAEA,uE;AACA,W;AACA,K;;AAEA,6C;AACA,oC;AACA,gC;;AAEA,2B;AACA,wD;AACA,S;;AAEA,iB;AACA,oC;AACA,S;;AAEA,2B;AACA,K;;AAEA,iB;;AAEA,6B;AACA,sC;AACA,6B;AACA,4B;AACA,kC;AACA,oC;AACA,qD;AACA,gE;AACA,qD;AACA,iD;AACA,+C;;AAEA,yD;AACA,sD;AACA,uB;AACA,a;;AAEA,yC;AACA,0C;AACA,a;;AAEA,oD;AACA,2C;AACA,qD;AACA,8D;AACA,oC;AACA,8G;AACA,mB;;AAEA,uB;AACA,a;;AAEA,wD;AACA,6C;AACA,uB;AACA,a;;AAEA,sD;AACA,qC;;AAEA,iD;AACA,sD;AACA,4D;;AAEA,qD;AACA,+C;AACA,wC;AACA,iB;;AAEA,uC;AACA,mG;;AAEA,8D;AACA,wC;AACA,sC;AACA,4C;AACA,iD;AACA,mB;;AAEA,oF;AACA,e;AACA,U;AACA,wC;AACA,iD;AACA,yF;AACA,a;AACA,S;AACA,O;;AAEA,gB;AACA,6C;AACA,+B;AACA,O;;AAEA,6B;AACA,0C;AACA,uB;AACA,0B;AACA,2B;AACA,+C;AACA,qD;;AAEA,mC;AACA,0B;AACA,a;;AAEA,+E;AACA,0B;AACA,a;;AAEA,+B;;AAEA,2B;AACA,8C;AACA,6B;AACA,a;;AAEA,0B;AACA,+B;AACA,iD;AACA,+C;;AAEA,8B;AACA,yF;AACA,iB;;AAEA,wF;AACA,mH;AACA,uD;AACA,mB;AACA,a;AACA,S;AACA,O;;AAEA,yB;AACA,wD;AACA,4B;AACA,uG;;AAEA,qC;AACA,sC;AACA,S;;AAEA,oE;AACA,oD;AACA,8D;;AAEA,oD;AACA,Y;AACA,M;;AAEA,0B;AACA,0D;AACA,4B;AACA,uG;;AAEA,qC;AACA,sC;AACA,S;;AAEA,oE;AACA,oD;AACA,8D;AACA,iE;;AAEA,2G;AACA,6B;AACA,a;;AAEA,uE;AACA,Y;AACA,K;;AAEA,0B;AACA,sD;AACA,oI;AACA,M;;AAEA,uC;AACA,iC;AACA,6D;AACA,U;AACA,wC;AACA,qD;;AAEA,mD;AACA,0F;AACA,S;AACA,O;;AAEA,sC;AACA,sC;AACA,qC;AACA,qD;AACA,yE;AACA,+D;;AAEA,+D;;AAEA,uF;AACA,oG;AACA,0B;AACA,mE;AACA,iB;;AAEA,6D;AACA,oF;AACA,wF;AACA,e;AACA,S;AACA,O;;AAEA,uB;AACA,kD;AACA,4B;AACA,mE;;AAEA,2D;;AAEA,kC;AACA,wE;AACA,W;AACA,K;;AAEA,mD;AACA,4B;AACA,mE;;AAEA,kC;AACA,kD;AACA,kD;AACA,mE;;AAEA,2D;AACA,gF;AACA,W;AACA,M;;AAEA,oC;AACA,uC;AACA,qD;;AAEA,oF;AACA,wB;AACA,8B;AACA,qC;AACA,uC;AACA,kB;AACA,e;AACA,U;AACA,kC;AACA,6H;AACA,2G;AACA,U;AACA,kC;AACA,qD;AACA,gE;AACA,oE;;AAEA,6F;AACA,U;AACA,yC;AACA,2D;AACA,2D;AACA,oF;;AAEA,+C;AACA,Y;AACA,+C;AACA,+D;AACA,a;AACA,Y;AACA,iD;AACA,2D;AACA,iD;;AAEA,2C;AACA,qC;AACA,wB;AACA,4C;AACA,8C;AACA,oC;AACA,uC;AACA,kB;AACA,a;;AAEA,oB;AACA,iC;AACA,uF;AACA,kC;AACA,0C;AACA,gC;AACA,mC;AACA,c;AACA,S;AACA,O;;AAEA,mC;AACA,yD;AACA,uB;AACA,qE;AACA,yE;AACA,8C;;AAEA,4E;AACA,+D;AACA,kE;AACA,yF;;AAEA,uD;;AAEA,+B;AACA,U;AACA,wC;AACA,gC;;AAEA,mC;AACA,wE;AACA,gF;AACA,qD;AACA,kB;AACA,e;AACA,U;AACA,wC;AACA,wC;AACA,0E;AACA,qE;;AAEA,uD;AACA,uB;AACA,a;;AAEA,qE;AACA,wB;AACA,0E;AACA,6C;;AAEA,oC;AACA,0D;AACA,mB;;AAEA,oC;AACA,mE;AACA,0D;AACA,6B;AACA,qC;AACA,gD;AACA,+D;AACA,sE;;AAEA,6C;AACA,2B;AACA,iB;;AAEA,iG;;AAEA,2C;AACA,kD;AACA,gC;AACA,kC;AACA,sB;AACA,yD;AACA,gC;AACA,kD;AACA,sB;AACA,iB;;AAEA,0D;AACA,4D;;AAEA,+E;;AAEA,uC;AACA,2B;AACA,iB;;AAEA,8D;AACA,0D;AACA,+C;AACA,2D;AACA,oB;;AAEA,mC;AACA,mE;AACA,yB;AACA,oC;AACA,gG;AACA,mB;AACA,a;AACA,U;AACA,qC;AACA,qD;;AAEA,kD;AACA,mE;AACA,a;AACA,S;AACA,O;;AAEA,+C;AACA,6B;AACA,iC;AACA,M;AACA,K;;;;;;;;;;;;;;;;;;;AC5fA,yE;AACA,+B;AACA,qB;AACA,K;;AAEA,gE;AACA,4B;AACA,wB;AACA,Q;AACA,E;;AAEA,sB;AACA,+C;AACA,e;AACA,4B;;AAEA,gD;AACA,sB;AACA,S;;AAEA,uG;;AAEA,4E;AACA,K;AACA,C","sourcesContent":["'use strict';\r\n\r\n/**\r\n * @title EasySearch Client Methods\r\n * @overview These are all the methods exposed to the client.\r\n * @author Matteo De Micheli\r\n * @license MIT\r\n *\r\n * @module EasySearch\r\n */\r\n\r\nEasySearch = (function () {\r\n    var defaults = {\r\n            limit: 10\r\n        },\r\n        indexes = {};\r\n    \r\n    /**\r\n     * Removes all functions from a given configuration.\r\n     *\r\n     * @param {Array} conf\r\n     *\r\n     * @return {Array}\r\n     */\r\n    function filterFunctions(conf) {\r\n        return _.omit(conf, 'collection', 'query', 'sort', 'permission');\r\n    }\r\n\r\n    return {\r\n        /**\r\n         * Create a search \"index\" to search on.\r\n         *\r\n         * @param {String} name\r\n         * @param {Object} options\r\n         */\r\n        'createSearchIndex' : function (name, options) {\r\n            check(name, String);\r\n            check(options, Object);\r\n\r\n            options.field = _.isArray(options.field) ? options.field : [options.field];\r\n            indexes[name] = _.extend(_.clone(defaults), options);\r\n            indexes[name].defaultLimit = options.limit;\r\n        },\r\n        /**\r\n         * Search over one of the defined indexes.\r\n         *\r\n         * @param {String} name\r\n         * @param {String} searchString\r\n         * @param {Function} callback\r\n         * @api public\r\n         */\r\n        'search' : function (name, searchString, callback) {\r\n            Meteor.call('easySearch', name, searchString, filterFunctions(indexes[name]), callback);\r\n        },\r\n        /**\r\n         * Search over multiple indexes.\r\n         *\r\n         * @param {Array} indexes\r\n         * @param {String} searchString\r\n         * @param {Function} callback\r\n         * @api public\r\n         */\r\n        'searchMultiple' : function (indexes, searchString, callback) {\r\n            _.each(indexes, function (name) {\r\n                Meteor.call('easySearch', name, searchString, filterFunctions(indexes[name]), callback);\r\n            });\r\n        },\r\n        /**\r\n         * Allow easily changing properties (for example the global search fields).\r\n         *\r\n         * @param {String} name\r\n         * @param {String} key\r\n         * @param {Object} value\r\n         * @api public\r\n         */\r\n        'changeProperty' : function(name, key, value) {\r\n            check(name, String);\r\n            check(key, String);\r\n\r\n            indexes[name][key] = value;\r\n        },\r\n        /**\r\n         * Retrieve a specific index configuration.\r\n         *\r\n         * @param {String} name\r\n         * @return {Object}\r\n         * @api public\r\n         */\r\n        'getIndex' : function (name) {\r\n            return indexes[name];\r\n        },\r\n        /**\r\n         * Retrieve all index configurations\r\n         *\r\n         * @return {Array}\r\n         * @api public\r\n         */\r\n        'getIndexes' : function () {\r\n            return indexes;\r\n        }\r\n    };\r\n})();\r\n","\nTemplate.__define__(\"esInput\", (function() {\n  var view = this;\n  return HTML.INPUT({\n    type: \"text\",\n    id: function() {\n      return Spacebars.mustache(view.lookup(\"id\"));\n    },\n    placeholder: function() {\n      return Spacebars.mustache(view.lookup(\"placeholder\"));\n    },\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"classes\"));\n    }\n  });\n}));\n\nTemplate.__define__(\"esEach\", (function() {\n  var view = this;\n  return Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"elasticSearchDoc\"));\n  }, function() {\n    return [ \"\\n        \", Blaze.InOuterTemplateScope(view, function() {\n      return Spacebars.TemplateWith(function() {\n        return Spacebars.call(view.lookup(\".\"));\n      }, function() {\n        return Spacebars.include(function() {\n          return Spacebars.call(view.templateContentBlock);\n        });\n      });\n    }), \"\\n    \" ];\n  });\n}));\n\nTemplate.__define__(\"ifEsIsSearching\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isSearching\"));\n  }, function() {\n    return [ \"\\n        \", Blaze.InOuterTemplateScope(view, function() {\n      return Spacebars.include(function() {\n        return Spacebars.call(view.templateContentBlock);\n      });\n    }), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n        \", Blaze.If(function() {\n      return Spacebars.call(view.templateElseBlock);\n    }, function() {\n      return [ \"\\n            \", Blaze.InOuterTemplateScope(view, function() {\n        return Spacebars.include(function() {\n          return Spacebars.call(view.templateElseBlock);\n        });\n      }), \"\\n        \" ];\n    }), \"\\n    \" ];\n  });\n}));\n\nTemplate.__define__(\"ifEsHasNoResults\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hasNoResults\"));\n  }, function() {\n    return [ \"\\n        \", Blaze.InOuterTemplateScope(view, function() {\n      return Spacebars.include(function() {\n        return Spacebars.call(view.templateContentBlock);\n      });\n    }), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n        \", Blaze.If(function() {\n      return Spacebars.call(view.templateElseBlock);\n    }, function() {\n      return [ \"\\n            \", Blaze.InOuterTemplateScope(view, function() {\n        return Spacebars.include(function() {\n          return Spacebars.call(view.templateElseBlock);\n        });\n      }), \"\\n        \" ];\n    }), \"\\n    \" ];\n  });\n}));\n\nTemplate.__define__(\"esLoadMoreButton\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hasMoreResults\"));\n  }, function() {\n    return [ \"\\n        \", HTML.BUTTON({\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"id\"));\n      },\n      \"class\": function() {\n        return Spacebars.mustache(view.lookup(\"classes\"));\n      }\n    }, Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"content\"));\n    })), \"\\n    \" ];\n  });\n}));\n\nTemplate.__define__(\"esAutosuggest\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"es-autosuggest-wrapper\",\n    \"data-id\": function() {\n      return Spacebars.mustache(view.lookup(\"id\"));\n    },\n    \"data-index\": function() {\n      return Spacebars.mustache(view.lookup(\"index\"));\n    }\n  }, \" \\n        \", HTML.DIV({\n    \"class\": \"selected values\"\n  }, \"\\n            \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"selectedValue\"));\n  }, function() {\n    return [ \"\\n                \", HTML.SPAN({\n      \"class\": \"value\"\n    }, \"\\n                    \", HTML.A({\n      href: \"#\",\n      \"class\": \"remove\"\n    }, \"X\"), \"\\n                    \", Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"value\"));\n    }), \"\\n                \"), \"\\n            \" ];\n  }), \"\\n        \"), \"\\n        \\n        \", Spacebars.TemplateWith(function() {\n    return {\n      index: Spacebars.call(view.lookup(\"index\")),\n      id: Spacebars.call(view.lookup(\"id\")),\n      placeholder: Spacebars.call(view.lookup(\"placeholder\")),\n      timeout: Spacebars.call(view.lookup(\"timeout\")),\n      classes: Spacebars.call(view.lookup(\"classes\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"esInput\"));\n  }), \"\\n\\n        \", HTML.UL({\n    \"class\": function() {\n      return [ \"suggestions \", Spacebars.mustache(view.lookup(\"isHidden\")) ];\n    }\n  }, \"\\n            \", Spacebars.TemplateWith(function() {\n    return {\n      index: Spacebars.call(view.lookup(\"index\")),\n      id: Spacebars.call(view.lookup(\"id\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"ifEsHasNoResults\"), function() {\n      return [ \"\\n                \", HTML.LI(\"No results found!\"), \"\\n            \" ];\n    }, function() {\n      return [ \"\\n                \", Spacebars.TemplateWith(function() {\n        return {\n          index: Spacebars.call(view.lookup(\"index\")),\n          id: Spacebars.call(view.lookup(\"id\")),\n          options: Spacebars.call(view.lookup(\"options\"))\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"esEach\"), function() {\n          return [ \"\\n                    \", Blaze.If(function() {\n            return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"renderSuggestion\"));\n          }, function() {\n            return [ \"\\n                        \", Spacebars.With(function() {\n              return Spacebars.dataMustache(view.lookup(\"snippets\"), view.lookup(\"..\"), view.lookup(\"...\"));\n            }, function() {\n              return [ \"\\n                            \", HTML.LI({\n                \"class\": function() {\n                  return Spacebars.mustache(view.lookup(\"selected\"));\n                }\n              }, \"\\n                                \", Spacebars.TemplateWith(function() {\n                return Spacebars.call(view.lookup(\".\"));\n              }, function() {\n                return Spacebars.include(function() {\n                  return Spacebars.call(Spacebars.dot(view.lookup(\"....\"), \"renderSuggestion\"));\n                });\n              }), \"\\n                            \"), \"\\n                        \" ];\n            }), \"\\n                    \" ];\n          }, function() {\n            return [ \"\\n                        \", Spacebars.With(function() {\n              return Spacebars.dataMustache(view.lookup(\"snippets\"), view.lookup(\"..\"), view.lookup(\"...\"));\n            }, function() {\n              return [ \"\\n                            \", HTML.LI({\n                \"class\": function() {\n                  return Spacebars.mustache(view.lookup(\"selected\"));\n                }\n              }, \"\\n                                \", HTML.A({\n                href: \"#\",\n                \"class\": \"suggestion\"\n              }, \"\\n                                    \", Blaze.View(function() {\n                return Spacebars.mustache(view.lookup(\"pre\"));\n              }), HTML.SPAN({\n                \"class\": \"found\"\n              }, Blaze.View(function() {\n                return Spacebars.mustache(view.lookup(\"found\"));\n              })), Blaze.View(function() {\n                return Spacebars.mustache(view.lookup(\"post\"));\n              }), \"\\n                                \"), \"\\n                            \"), \"\\n                        \" ];\n            }), \"\\n                    \" ];\n          }), \"\\n                \" ];\n        });\n      }), \"\\n            \" ];\n    });\n  }), \"\\n        \"), \"\\n    \");\n}));\n","(function () {\r\n    'use strict';\r\n\r\n    var m = {},\r\n        defaults,\r\n        LocalTimer,\r\n        inputCache,\r\n        SearchVars,\r\n        autosuggestCache = {},\r\n        LocalCache = new Meteor.Collection(null);\r\n\r\n    // Default values\r\n    defaults = {\r\n        'inputTimeout' : 200,\r\n        'reactive' : true,\r\n        'event' : 'keyup'\r\n    };\r\n\r\n    // Session Abstraction\r\n    Session.setDefault('esVariables', {});\r\n\r\n    SearchVars = {\r\n        'set' : function (id, obj) {\r\n            Session.set('esVariables_' + id, _.extend(Session.get('esVariables_'  + id) || {}, obj));\r\n        },\r\n        'get' : function (id, key) {\r\n            return (Session.get('esVariables_' + id) || {})[key];\r\n        }\r\n    };\r\n\r\n    // Error Messages\r\n    m.specifyIndex = 'Specify an index, for example {{> esInput index=\"name\"}}!';\r\n    m.searchingFailed = \"Searching failed within the EasySearch API\";\r\n    m.firstValueStringAutosuggest = \"Use a string value as the first field specified for autosuggest!\";\r\n\r\n    // A simple timer\r\n    LocalTimer = {\r\n        'timers' : {},\r\n        'stop' : function (id) {\r\n            clearTimeout(this.timers[id]);\r\n            delete this.timers[id];\r\n        },\r\n        'runAt' : function (id, millSec, func, params) {\r\n            var that = this;\r\n\r\n            this.timers[id] = setTimeout(function () {\r\n                func(params);\r\n                that.stop(id);\r\n            }, parseInt(millSec, 10));\r\n        },\r\n        'isRunning' : function (id) {\r\n            return \"undefined\" !== typeof this.timers[id];\r\n        }\r\n    };\r\n\r\n    // Add the search results to cache and process it\r\n    function processSearchResults(index, data, isReactive)\r\n    {\r\n        // Just store the data\r\n        if (!isReactive) {\r\n            LocalCache.upsert(\r\n                { _id : index },\r\n                { _id : index, r : isReactive, d : data.results }\r\n            );\r\n\r\n            return;\r\n        }\r\n\r\n        // If it has to be reactive\r\n        LocalCache.upsert(\r\n            { _id : index },\r\n            {\r\n                _id : index,\r\n                r : isReactive,\r\n                d : _.map(data.results, function(doc) { return doc._id; })\r\n            }\r\n        );\r\n    }\r\n\r\n    // Perform a search with esInput\r\n    function esInputSearch (conf) {\r\n        var id = conf.easySearchID,\r\n            searchValue = conf.value,\r\n            index = conf.easySearchIndex;\r\n\r\n        if (searchValue.length < 1) {\r\n            SearchVars.set(id, { 'searching' : false, 'searchingDone' : false });\r\n            LocalCache.upsert({ _id : index }, { _id : index, d : null });\r\n            return;\r\n        }\r\n\r\n        EasySearch.search(index, searchValue, function (err, data) {\r\n            if (err) {\r\n                throw new Meteor.Error(500, m.searchingFailed);\r\n            }\r\n\r\n            SearchVars.set(id, {\r\n                'searching' : false,\r\n                'total' : data.total,\r\n                'searchingDone' : true,\r\n                'searchResults' : data.results,\r\n                'currentValue' : searchValue\r\n            });\r\n\r\n            processSearchResults(index, data, conf.easySearchReactive);\r\n        });\r\n    }\r\n\r\n    // Generate an id used for the components\r\n    function generateId(index, id) {\r\n        var generatedId = index;\r\n\r\n        if (!generatedId) {\r\n            throw new Meteor.Error(400, m.specifyIndex);\r\n        }\r\n\r\n        if (id) {\r\n            generatedId += '_' + id;\r\n        }\r\n\r\n        return generatedId;\r\n    }\r\n\r\n    /* esInput */\r\n\r\n    Template.esInput.events({\r\n        'keyup input' : function (e) {\r\n            var i, id, index,\r\n                searchValue,\r\n                eventScope = this,\r\n                input = $(e.target),\r\n                reactive = this.reactive !== \"false\",\r\n                timeout = this.timeout || defaults.inputTimeout,\r\n                event = this.event || defaults.event,\r\n                searchValue = input.val().trim(),\r\n                keyCode = e.keyCode || e.which;\r\n\r\n            // Pressed not enter with enter configuration\r\n            if (\"enter\" === event && 13 !== keyCode) {\r\n                return;\r\n            }\r\n\r\n            if (!_.isArray(this.index)) {\r\n                this.index = [this.index];\r\n            }\r\n\r\n            // Reset values if search value is empty\r\n            if (searchValue.length === 0) {\r\n                _.each(this.index, function (index) {\r\n                    var id = generateId(index, eventScope.id);\r\n                    inputCache = '';\r\n                    SearchVars.set(id, { 'searchingDone' : false, 'currentValue' : '', 'searching' : false });\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            // Only search when the value hasn't changed\r\n            if (inputCache === searchValue) {\r\n                return;\r\n            }\r\n\r\n            // Run the search at the specified timeout\r\n            inputCache = searchValue;\r\n\r\n            _.each(this.index, function (index) {\r\n                id = generateId(index, eventScope.id);\r\n                SearchVars.set(id, { 'searching' : false });\r\n\r\n                // If already running, stop the timer\r\n                if (LocalTimer.isRunning(id)) {\r\n                    LocalTimer.stop(id);\r\n                }\r\n\r\n                // Set to default limit\r\n                EasySearch.changeProperty(index, 'limit', EasySearch.getIndex(index).defaultLimit);\r\n\r\n                LocalTimer.runAt(id, timeout, esInputSearch, {\r\n                    value : searchValue,\r\n                    easySearchID : id,\r\n                    easySearchIndex : index,\r\n                    easySearchReactive : reactive\r\n                });\r\n\r\n                SearchVars.set(id, { 'searchingDone' : false, 'searching' : true });\r\n            });\r\n        },\r\n        'keydown input' : function (e) {\r\n            if ($(e.target).val().length === 0) {\r\n                SearchVars.set(generateId(this.index, this.id), { 'currentValue' : '' });\r\n            }\r\n        }\r\n    });\r\n\r\n    /* esEach */\r\n    UI.registerHelper('esEach', function () {\r\n        return Template.esEach;\r\n    });\r\n\r\n    Template.esEach.helpers({\r\n        'elasticSearchDoc' : function () {\r\n            var config,\r\n                indexConf,\r\n                isReactive,\r\n                options = this.options || null,\r\n                doc = LocalCache.findOne(this.index);\r\n\r\n            if (!_.isObject(doc)) {\r\n                return [];\r\n            }\r\n\r\n            if (SearchVars.get(generateId(this.index, this.id), 'searching')) {\r\n                return [];\r\n            }\r\n\r\n            isReactive = doc.r;\r\n\r\n            // Not reactive\r\n            if (doc && doc.d && !isReactive) {\r\n                return doc.d;\r\n            }\r\n\r\n            // Is reactive\r\n            if (doc && doc.d) {\r\n                config = EasySearch.getIndexes();\r\n                indexConf = config[this.index];\r\n\r\n                if (options) {\r\n                    return indexConf.collection.find({ _id : { $in : doc.d } }, options);\r\n                }\r\n\r\n                // TODO: Find a more performant way than this for ordering the documents\r\n                return _.sortBy(indexConf.collection.find({ _id : { $in : doc.d } }).fetch(), function (document) {\r\n                    return doc.d.indexOf(document._id);\r\n                });\r\n            }\r\n        }\r\n    });\r\n\r\n    /* ifEsIsSearching */\r\n    Template.ifEsIsSearching.isSearching = function () {\r\n        var tplScope = this,\r\n            combineMethod = tplScope.logic && tplScope.logic.toUpperCase() === 'OR' ? 'some' : 'every';\r\n\r\n        if (!_.isArray(this.index)) {\r\n            this.index = [this.index];\r\n        }\r\n\r\n        return _[combineMethod](_.map(this.index, function (index) {\r\n            var id = generateId(index, tplScope.id),\r\n                isSearching = SearchVars.get(id, 'searching');\r\n\r\n            return isSearching ? isSearching : null;\r\n        }));\r\n    };\r\n\r\n    /* ifEsHasNoResults */\r\n    Template.ifEsHasNoResults.hasNoResults = function () {\r\n        var tplScope = this,\r\n            combineMethod = tplScope.logic && tplScope.logic.toUpperCase() === 'OR' ? 'some' : 'every';\r\n\r\n        if (!_.isArray(this.index)) {\r\n            this.index = [this.index];\r\n        }\r\n\r\n        return _[combineMethod](_.map(this.index, function (index) {\r\n            var id = generateId(index, tplScope.id),\r\n                cache = LocalCache.findOne({ '_id' : index }),\r\n                searchValue = SearchVars.get(id, 'currentValue');\r\n\r\n            if (SearchVars.get(id, 'searching') || (_.isString(searchValue) && searchValue.length === 0)) {\r\n                return false;\r\n            }\r\n\r\n            return cache && _.isArray(cache.d) && cache.d.length === 0;\r\n        }));\r\n    }\r\n\r\n    /* esLoadMoreButton */\r\n    Template.esLoadMoreButton.rendered = function () {\r\n        SearchVars.set(generateId(this.data.index, this.data.id), { 'currentLimit' :  EasySearch.getIndex(this.data.index).limit });\r\n    };\r\n\r\n    Template.esLoadMoreButton.helpers({\r\n        'content' : function () {\r\n            return this.content ? this.content : 'Load more';\r\n        },\r\n        'hasMoreResults' : function () {\r\n            var id = generateId(this.index, this.id);\r\n\r\n            return !SearchVars.get(id, 'searching')\r\n                    && (SearchVars.get(id, 'total') > SearchVars.get(id, 'currentLimit'));\r\n        }\r\n    });\r\n\r\n    Template.esLoadMoreButton.events({\r\n        'click button' : function () {\r\n            var templateScope = this,\r\n                id = generateId(this.index, this.id),\r\n                currentLimit = EasySearch.getIndexes()[this.index].limit,\r\n                howManyMore = this.howMany ? this.howMany : 10;\r\n\r\n            templateScope.reactive = this.reactive !== \"false\";\r\n\r\n            EasySearch.changeProperty(this.index, 'limit', currentLimit + howManyMore);\r\n            EasySearch.search(this.index, SearchVars.get(id, 'currentValue'), function (err, data) {\r\n                if (err) {\r\n                    throw new Meteor.Error(500, m.searchingFailed);\r\n                }\r\n\r\n                SearchVars.set(id, { 'total' : data.total });\r\n                SearchVars.set(id, { 'currentLimit' : currentLimit + howManyMore });\r\n                processSearchResults(templateScope.index, data, templateScope.reactive);\r\n            });\r\n        }\r\n    });\r\n\r\n    /* esAutosuggest */\r\n    Template.esAutosuggest.created = function () {\r\n        var tplScope = this,\r\n            id = generateId(tplScope.data.index, tplScope.data.id);\r\n\r\n        SearchVars.set(id, { 'autosuggestSelected' : [] });\r\n\r\n        Deps.autorun(function () {\r\n            autosuggestCache.value = SearchVars.get(id, 'currentValue');\r\n        });\r\n    }\r\n\r\n    Template.esAutosuggest.rendered = function () {\r\n        var tplScope = this,\r\n            id = generateId(tplScope.data.index, tplScope.data.id);\r\n\r\n        Deps.autorun(function () {\r\n            var input = $(tplScope.find('input')),\r\n                wrapper = $(tplScope.find('div')),\r\n                values = SearchVars.get(id, 'autosuggestSelected');\r\n\r\n            // Reposition the input when a value gets added\r\n            input.css('padding-left', wrapper.find('.selected.values').width());\r\n        });\r\n    };\r\n\r\n    Template.esAutosuggest.helpers({\r\n        'selectedValue' : function () {\r\n            var id = generateId(this.index, this.id);\r\n\r\n            return _.map(SearchVars.get(id, 'autosuggestSelected'), function (val) {\r\n                return {\r\n                    'id' : id,\r\n                    'docId' : val.id,\r\n                    'value' : val.value\r\n                };\r\n            });\r\n        },\r\n        'selected' : function () {\r\n            var suggestionsSelected = SearchVars.get(generateId(this.options.index, this.options.id), 'suggestionsSelected');\r\n            return _.isObject(suggestionsSelected) && suggestionsSelected.id === this.id ? 'selected' : '';\r\n        },\r\n        'isHidden' : function () {\r\n            var id = generateId(this.index, this.id),\r\n                inputValue = SearchVars.get(id, 'currentValue'),\r\n                searchingDone = SearchVars.get(id, 'searchingDone');\r\n\r\n            return (inputValue && inputValue.length > 0) && searchingDone  ? 'show' : 'hide';\r\n        },\r\n        'snippets' : function (options) {\r\n            var regex, firstFieldValue, searchValue, parts,\r\n                index = EasySearch.getIndex(options.index),\r\n                firstField  = _.isArray(index.field) ? index.field[0] : index.field;\r\n\r\n            firstFieldValue = this[firstField];\r\n            \r\n            if (!_.isString(firstFieldValue)) {\r\n                throw new Error(m.firstValueStringAutosuggest);\r\n            }\r\n            \r\n            searchValue = autosuggestCache.value,\r\n            regex = new RegExp(searchValue + '(.+)?', \"i\");\r\n            parts = firstFieldValue.split(regex);\r\n\r\n            // Not found in the first field\r\n            if (parts.length === 1) {\r\n                return {\r\n                    'pre' : firstFieldValue,\r\n                    'value' : firstFieldValue,\r\n                    'id' : this._id,\r\n                    'options' : options\r\n                };\r\n            }\r\n\r\n            return {\r\n                'pre' : parts[0],\r\n                'found' : (new RegExp(searchValue, 'i')).exec(firstFieldValue).shift(),\r\n                'post' : parts[1],\r\n                'value' : firstFieldValue,\r\n                'id' : this._id,\r\n                'options' : options\r\n            };\r\n        }\r\n    });\r\n\r\n    Template.esAutosuggest.events({\r\n        'click .suggestion:not(.remove)' : function (e) {\r\n            var values,\r\n                id = generateId(this.options.index, this.options.id),\r\n                wrapper = $(e.target).closest('.es-autosuggest-wrapper'),\r\n                input = wrapper.find('input');\r\n\r\n            // Add a box in front of the input which is the selected \"value\"\r\n            values = SearchVars.get(id, 'autosuggestSelected');\r\n            values.push({ 'id' : this.id, 'value' : this.value });\r\n            SearchVars.set(id, { 'autosuggestSelected' :  values, 'currentValue' : '' });\r\n\r\n            input.val('').keyup().keypress().keydown();\r\n\r\n            e.preventDefault();\r\n        },\r\n        'click .remove' : function (e) {\r\n            var tplScope = this;\r\n\r\n            // Removes a suggestion\r\n            SearchVars.set(this.id, { 'autosuggestSelected' :  _.reject(\r\n                SearchVars.get(this.id, 'autosuggestSelected'), function (val) {\r\n                    return val.id === tplScope.docId;\r\n                })\r\n            });\r\n        },\r\n        'keydown input' : function (e) {\r\n            var selected, currentValues,\r\n                id = generateId(this.index, this.id), input = $(e.target),\r\n                selected = SearchVars.get(id, 'suggestionsSelected');\r\n\r\n            if (!$(e.target).val() && !e.which === 8) {\r\n                return;\r\n            }\r\n\r\n            if (e.which === 13 && selected && _.isObject(selected)) {\r\n                // Enter\r\n                currentValues = SearchVars.get(id, 'autosuggestSelected');\r\n                currentValues.push(selected);\r\n\r\n                SearchVars.set(id, {\r\n                    'autosuggestSelected' : currentValues,\r\n                });\r\n\r\n                $(e.target).val('');\r\n                SearchVars.set(id, { 'suggestionsSelected' : '' });\r\n            } else if (e.which === 40 || e.which === 38) {\r\n                // Down or Up\r\n                var incrementalValue,\r\n                    toBeSelectedDoc, firstField,\r\n                    index = EasySearch.getIndex(this.index[0]),\r\n                    suggestions = SearchVars.get(id, 'searchResults');\r\n\r\n                if (!index || !suggestions) {\r\n                    return;\r\n                }\r\n\r\n                firstField = firstField  = _.isArray(index.field) ? index.field[0] : index.field;\r\n\r\n                // If there's none selected\r\n                if (!selected && e.which === 40) {\r\n                    selected = {\r\n                        'pos' : -1\r\n                    };\r\n                } else if (!selected && e.which === 38) {\r\n                    selected = {\r\n                        'pos' : suggestions.length\r\n                    };\r\n                }\r\n\r\n                // Take the one below or up, decide by key\r\n                incrementalValue = e.which === 40 ? 1 :  -1;\r\n\r\n                toBeSelectedDoc = suggestions[selected.pos + incrementalValue];\r\n\r\n                if (!toBeSelectedDoc) {\r\n                    return;\r\n                }\r\n\r\n                SearchVars.set(id, { 'suggestionsSelected' : {\r\n                    'value' : toBeSelectedDoc[firstField],\r\n                    'id' : toBeSelectedDoc._id,\r\n                    'pos' : selected.pos + incrementalValue\r\n                }});\r\n\r\n                e.preventDefault();\r\n            } else if (e.which === 8 && input.val().length === 0) {\r\n                // Remove\r\n                SearchVars.set(id, {\r\n                    'autosuggestSelected' : _.initial(SearchVars.get(id, 'autosuggestSelected'))\r\n                });\r\n            }\r\n        },\r\n        'keyup input' : function () {\r\n            var id = generateId(this.index, this.id);\r\n\r\n            if (SearchVars.get(id, 'searching')) {\r\n                SearchVars.set(id, { 'suggestionsSelected' : '' });\r\n            }\r\n        }\r\n    });\r\n\r\n    EasySearch.ComponentVariables = SearchVars;\r\n    EasySearch.Components = {\r\n        'generateId' : generateId\r\n    };\r\n})();\r\n","Meteor.Collection.prototype.initEasySearch = function (fields, options) {\r\n    if (!_.isObject(options)) {\r\n        options = {};\r\n    }\r\n\r\n    EasySearch.createSearchIndex(this._name, _.extend(options, {\r\n        'collection' : this,\r\n        'field' : fields\r\n    }));\r\n};\r\n\r\nif (Meteor.isClient) {\r\n    jQuery.fn.esAutosuggestData = function () {\r\n        var id,\r\n            input = $(this);\r\n\r\n        if (input.prop(\"tagName\") !== 'INPUT') {\r\n            return [];\r\n        }\r\n\r\n        id = EasySearch.Components.generateId(input.parent().data('index'), input.parent().data('id'));\r\n\r\n        return EasySearch.ComponentVariables.get(id, 'autosuggestSelected');\r\n    }\r\n}\r\n\r\n"]}