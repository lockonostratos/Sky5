{"version":3,"file":"\\packages\\blocking.js","sources":["blocking/server.js"],"names":[],"mappings":";;;;;;;;AAAA,c;AACA,4E;AACA,8E;AACA,6C;AACA,kC;AACA,e;AACA,gB;AACA,sB;AACA,K;AACA,yC;AACA,yB;AACA,uC;AACA,mB;AACA,O;AACA,2C;AACA,M;AACA,uB;AACA,a;AACA,I;AACA,K","sourcesContent":["(function () {\r\n  // Inside blocking context functions should not be throwing exceptions but\r\n  // call callback with first argument an error. Exceptions will not propagate\r\n  // and will only be printed to the console.\r\n  blocking = function (obj, fun) {\r\n    if (!fun) {\r\n      fun = obj;\r\n      obj = undefined;\r\n    }\r\n    var wrapped = Meteor._wrapAsync(fun);\r\n    var f = function () {\r\n      if (typeof obj === 'undefined') {\r\n        obj = this;\r\n      }\r\n      return wrapped.apply(obj, arguments);\r\n    };\r\n    f._blocking = true;\r\n    return f;\r\n  };\r\n})();\r\n"]}